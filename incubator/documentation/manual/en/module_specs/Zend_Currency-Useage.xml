<sect1 id="zend.currency.useage">

    <title>How to work with currencies</title>

    <para>
        To use <code>Zend_Currency</code> within the own application just create an instance of it without any
        parameter. This creates an instance of <code>Zend_Currency</code> with the actual locale which defines
        the currency which is used.
    <para>

    <example id="zend.currency.useage.example1">

        <title>Creating an instance of Zend_Currency from the actual locale</title>

        <para>
            Expect you have 'en_US' set as actual locale. By using no parameter at creation you say
            <code>Zend_Currency</code> to use the actual currency from the locale 'en_US'. This leads to
            an instance with US Dollar set as actual currency with the formatting rules from 'en_US'.
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

$currency = new Zend_Currency();
        </programlisting>

    </example>

    <para>
        Of course, depending on your useage, several parameters can be given by creation. Each of this parameters
        is optional and can be supressed. Even the order of the parameters can be switched. The meaning of each
        parameter is as described here:
    </para>

    <itemizedlist mark='opencircle'>
        <listitem>
            <para>
                <emphasis role="strong">currency</emphasis>:
            </para>
            <para>
                A locale can include several currencies. Therefor the first parameter
                <emphasis role="strong">'currency'</emphasis> can define which currency should be used by giving
                the short name of that currency. If that currency in not known in any locale an exception will
                be thrown. Currency short names are always 3 lettered and written uppercase.
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">script</emphasis>:
            </para>
            <para>
                The second parameter <emphasis role="strong">'script'</emphasis> defines in which script the output
                should be given. The standard script is 'Latin' which includes the global known digits from
                <emphasis role="strong">'0'</emphasis> to <emphasis role="strong">'9'</emphasis>. Other scripts
                like <emphasis role="strong">'Arab'</emphasis> can include other digits. For more information
                about scripts see
                <link linkend="zend.locale.appendix.numberscripts.supported">supported number scripts</link>.
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">locale</emphasis>:
            </para>
            <para>
                The third parameter <emphasis role="strong">'locale'</emphasis> defines which locale should be
                used for formatting the currency. The given locale will also be used to get the standard script
                and currency of this currency if these parameters are not given.
            </para>
        </listitem>
    </itemizedlist>

    <example id="zend.currency.useage.example2">

        <title>Other examples for creating an instance of Zend_Currency</title>

        <programlisting role="php"><![CDATA[<?php
// expect standard locale 'de_AT'
require_once 'Zend/Currency.php';

// creates an instance from 'en_US' using 'USD', 'Latin' and 'en_US' as these are the default values from 'en_US'
$currency = new Zend_Currency('en_US');

// creates an instance from the actual locale ('de_AT') using 'EUR' as currency but displaying it in 'Arab' script
$currency = new Zend_Currency('Arab');

// creates an instance using 'EUR' as currency, 'en_US' for number formating and 'Arab' for the script
$currency = new Zend_Currency('en_US', 'EUR', 'Arab');
        </programlisting>

    </example>

    <para>
        So you can supress any of these parameters if you want to use the default ones. This has no negative effect
        on the handling of currencies. It can be usefull f.e. if you dont know that default currency of a region.
    </para>

    <note>
        <para>
            For many countries there are several currencies known. One actual used currency and several ancient
            currencies. If the <emphasis role="script">'currency'</emphasis> parameter is supressed the actual
            currency will be used. The region 'de' for example knows the currencies 'EUR' and 'DEM'... 'EUR' is the
            actual one and will be used if the parameter is supressed.
        </para>
    </note>
</sect1>