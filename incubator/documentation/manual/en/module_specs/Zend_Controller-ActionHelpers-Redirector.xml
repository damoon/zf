<sect3 id="zend.controller.actionhelpers.redirector">
	<title>Redirector</title>

	<sect4 id="zend.controller.actionhelper.redirector.introduction">
		<title>Introduction</title>
		<para>
            The <code>Redirector</code> helper allows you to use a redirector
            object to fufill your application's needs for redirecting to a new
            url.  The has numerous benefits this has over the
            <code>_redirect()</code> method such as being able to preconfigure
            sitewide behavior into the redirector object, or using the built in
            <code>goto($action, $controller, $module, $params)</code> interface
            similar to that of <code>Zend_Controller_Action::_forward()</code>.
		</para>

        <para>
            The <code>Redirector</code> has a number of methods that can be used
            to affect the behaviour at redirect:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <code>setCode()</code> can be used to set the HTTP response
                    code to use during the redirect.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>setExit()</code> can be used to force an
                    <code>exit()</code> following a redirect. By default this is
                    true.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>setGoto()</code> can be used to set a default URL to
                    use if none is passed to <code>goto()</code>. Uses the API
                    of <code>Zend_Controller_Action::_forward()</code>:
                    setgoto($action, $controller = null, $module = null, array
                    $params = array());
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>setGotoUrl()</code> can be used to set a default URL to
                    use if none is passed to <code>gotoUrl()</code>. Accepts a
                    single URL string.
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>setPrependBase()</code> can be used to prepend the
                    request object's base URL to a url specified with
                    <code>setGotoUrl()</code>, <code>gotoUrl()</code>, or
                    <code>gotoUrlAndExit()</code>.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Additionally, there are a variety of methods in the redirector for
            performing the actual redirects:
        </para>

        <itemizedlist>
        </itemizedlist>
    </sect4>

	<sect4 id="zend.controller.actionhelper.redirector.basicusage">
		<title>Basic Usage Example</title>

        <programlisting role="php"><![CDATA[
<?php
// EXAMPLE 1: SET GLOBAL OPTIONS
class SomeController extends Zend_Controller_Action
{
    /**
     * Redirector - defined for code completion
     *
     * @var Zend_Controller_Action_Helper_Redirector
     */
    protected $_redirector = null;
    
    public function init()
    {
        $this->_redirector = $this->_helpers->getHelper('Redirector');
        
        // Set the default options for the redirector
        // Since the object is registered in the helper broker, these become
        // relevant for all actions from this point forward
        $this->_redirector->setCode('303')
                          ->setExit(false)
                          ->setGoto("this-action", "some-controller");
    }
    
    public function myAction()
    {
        /* do some stuff */

        $this->_redirector->redirectAndExit();
        return; // never reached
    }
}


// ALTERNATIVE EXAMPLE
class AlternativeController extends Zend_Controller_Action
{
    /**
     * Redirector - defined for code completion
     *
     * @var Zend_Controller_Action_Helper_Redirector
     */
    protected $_redirector = null;
    
    public function init()
    {
        $this->_redirector = $this->_helpers->getHelper('Redirector');
    }
    
    public function myAction()
    {
        /* do some stuff */

        $this->_redirector->gotoUrl('/my-controller/my-action/param1/test/param2/test2');
        return; // never reached since default is to goto and exit
    }
}

// EXAMPLE USING _forward() API IN goto()
class ForwardController extends Zend_Controller_Action
{
    /**
     * Redirector - defined for code completion
     *
     * @var Zend_Controller_Action_Helper_Redirector
     */
    protected $_redirector = null;
    
    public function init()
    {
        $this->_redirector = $this->_helpers->getHelper('Redirector');
    }
    
    public function myAction()
    {
        /* do some stuff */

        // Redirect to 'my-action' of 'my-controller' in the current module,
        // using the params param1 => test and param2 => test2
        $this->_redirector->goto('my-action', 'my-controller', null, array('param1' => 'test', 'param2' => 'test2'));
    }
}
]]></programlisting>

    </sect4>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
