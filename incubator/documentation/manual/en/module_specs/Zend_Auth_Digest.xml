<sect1 id="zend.auth.digest">

    <title>Digest Authentication</title>

    <sect2 id="zend.auth.digest.introduction">

        <title>Introduction</title>

        <para>
        <ulink url="http://en.wikipedia.org/wiki/Digest_access_authentication">Digest authentication</ulink>
        is a method of HTTP authentication that improves upon
        <ulink url="http://en.wikipedia.org/wiki/Basic_authentication_scheme">Basic authentication</ulink>
        by providing a way to authenticate without having to transmit the password in clear text across
        the network.
        </para>

        <para>
        This adapter allows authentication against text files containing lines having the basic elements of
        digest authentication:
        <itemizedlist>
            <listitem>
                <para>
                username, such as "<code>joe.user</code>"
                </para>
            </listitem>
            <listitem>
                <para>
                realm, such as "<code>Administrative Area</code>"
                </para>
            </listitem>
            <listitem>
                <para>
                MD5 hash of the username, realm, and password, separated by colons
                </para>
            </listitem>
        </itemizedlist>
        The above elements are separated by colons, as in the following example (in which the password
        is "<code>somePassword</code>"):
        </para>

        <programlisting><![CDATA[someUser:Some Realm:fde17b91c3a510ecbaf7dbd37f59d4f8]]></programlisting>

    </sect2>

    <sect2 id="zend.auth.digest.adapter">

        <title>Adapter</title>

        <para>
        The digest authentication adapter, <code>Zend_Auth_Digest_Adapter</code>,
        provides both <code>staticAuthenticate()</code> and
        <code>authenticate()</code> methods. The <code>authenticate()</code> method accepts
        <code>username</code>, <code>realm</code>, and <code>password</code> options, as the
        adapter object is bound to a particular digest authentication file. The
        <code>staticAuthenticate()</code> method, however, accepts an additional <code>filename</code>
        option so that any digest authentication file may be queried.
        </para>

    </sect2>

    <sect2 id="zend.auth.digest.token">

        <title>Token</title>

        <para>
        The digest authentication token, <code>Zend_Auth_Digest_Token</code>, provides the identity
        as an array having keys of <code>realm</code> and <code>username</code>, and the associated values
        correspond with those provided in the authentication attempt:
        </para>

        <programlisting role="php"><![CDATA[$identity = $token->getIdentity();

print_r($identity);

/*
Array
(
    [realm] => Some Realm
    [username] => someUser
)
*/]]></programlisting>

    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
