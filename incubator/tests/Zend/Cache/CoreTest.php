<?php
// Call Zend_Cache_CoreTest::main() if this source file is executed directly.
if (!defined("PHPUnit2_MAIN_METHOD")) {
    define("PHPUnit2_MAIN_METHOD", "Zend_Cache_CoreTest::main");
}

require_once "PHPUnit2/Framework/TestCase.php";
require_once "PHPUnit2/Framework/TestSuite.php";

require_once "Zend/Cache/Core.php";
require_once "Zend/Cache/Backend/File.php";

/**
 * Test class for Zend_Cache_Core.
 * Generated by PHPUnit2_Util_Skeleton on 2006-03-26 at 23:38:55.
 */
class Zend_Cache_CoreTest extends PHPUnit2_Framework_TestCase {
    
    protected $instance;
    
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit2/TextUI/TestRunner.php";

        $suite  = new PHPUnit2_Framework_TestSuite("Zend_Cache_CoreTest");
        $result = PHPUnit2_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
        if(!$this->instance) $this->instance = new Zend_Cache_Core;
        /*$backend = $this->getMock(
            'Zend_Cache_Backend_File',
            array('get', 'test', 'save', 'remove', 'clean')
            );
        $this->instance->setBackend($backend);*/
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
        unset($this->instance);
    }

    public function testSetBackend() {
        $backend = $this->getMock('Zend_Cache_Backend_File');
        $this->instance->setBackend($backend);
        $this->assertSame($backend, $this->getNonPublicProperty($this->instance, '_backend'));
    }

    public function testGet() {
        $backend = $this->getMock('Zend_Cache_Backend_File', array('get'));
        $this->instance->setBackend($backend);
        
        $id = 'testID';
        
        $backend->expects($this->once())
                ->method('get')
                ->with($this->equalTo($id));
        $this->instance->get($id);
    }

    /**
     * @todo Implement testTest().
     */
    public function testTest() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testSave().
     */
    public function testSave() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testRemove().
     */
    public function testRemove() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testClean().
     */
    public function testClean() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }
}

// Call Zend_Cache_CoreTest::main() if this source file is executed directly.
if (PHPUnit2_MAIN_METHOD == "Zend_Cache_CoreTest::main") {
    Zend_Cache_CoreTest::main();
}
?>
