<sect1 id="zend.register">
    <title>Zend::register($index, $newval)</title>

    <para>
        Rejestruje wartość $newval pod indeksem $index w rejestrze.
    </para>

    <example>
        <title>Przykład użycia register() / offsetSet()</title>
<programlisting role="php"><![CDATA[<?php
Zend::register($index, $value);

// lub

$registry = Zend::registry();
$registry->offsetSet($index, $newval);

?>]]></programlisting>
    </example>

    <para>
        Rejestr jest mechanizmem umożliwiającym aplikacji dostęp do jednej instancji
        wartości (singleton). Rejestrując wartość w rejestrze, a następnie ją 
        odbierając zawsze otrzymamy tą samą instancję.
    </para>

    <para>TUTAJ
        Parametr <code>$index</code> jest nazwą indeksu wartości przechowywanej w rejestrze.
        Ten sam indeks jest przekazywany jako parametr do metody <code>Zend::registry()</code> 
        w celu powtórnego odebrania przechowywanej wartości.
    </para>

    <para>
        Składnia rejestru odpowiada składni obiektu 
        <ulink
        url="http://www.php.net/~helly/php/ext/spl/classArrayObject.html">ArrayObject</ulink>
        . Ta metoda po prostu rozszerza metodę 
        <ulink url="http://www.php.net/manual/en/function.arrayobject-offsetset.php">
        offsetSet()</ulink>
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->