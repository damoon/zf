<sect1 id="zend.registry">
    <title>Zend::registry($index = null)</title>

    <para>
        Zwraca z rejestru wartość przechowywaną pod indeksem $index lub sam rejestr.
    </para>

    <example>
        <title>registry() / offsetGet() Example</title>
<programlisting role="php"><![CDATA[<?php
Zend::registry($index=null)

// lub

$registry = Zend::registry();
$value = $registry->offsetGet($index);
?>]]></programlisting>
    </example>

    <para>
        Jeśli pod indeksem <code>$index</code> jest przechowywana wartość, to zostanie ona zwrócona. Jeśli
        argument <code>$index</code> ma wartość <code>NULL</code>, zwrócony zostanie obiekt rejestru (podklasa
        <ulink url="http://www.php.net/~helly/php/ext/spl/classArrayObject.html">ArrayObject</ulink>
        ). Ta metoda w prosty sposób rozszerza metodę
        <ulink url="http://www.php.net/manual/en/function.arrayobject-offsetget.php">
        offsetGet()</ulink>
        , z dodatkową możliwością zwracania całego rejestru gdy nie został podany $index.
    </para>

    <para>
    Jeśli parametr <code>$index</code> jest łańcuchem znaków, zostaje zwrócona
    wartość przypisana do tego indeksu. Jeśli wartość o indeksie <code>$index</code>
    nie istnieje w rejestrze zostaje wyrzucony wyjątek <code>Zend_Exception</code>.
    </para>

    <para>
        Do szybkiego sprawdzenia czy obiekt istnieje w rejestrze służy metoda Zend::isRegistered().
    </para>

    <example>
        <title>Przykład użycia isRegistered() / offsetExists()</title>
<programlisting role="php"><![CDATA[<?php
Zend::isRegistered($index=null)

// lub

$registry = Zend::registry();
echo $registry->offsetExists($index) ? 'istnieje' : 'nie istnieje';
?>]]></programlisting>
    </example>

    <para>
        Iteracja wymaga małego zachodu:
    </para>

    <example>
        <title>Iteracja poprzez rejestr</title>
<programlisting role="php"><![CDATA[<?php
foreach (Zend::registry() as $index => $value) {
    echo "$index => $value<br />\n";
}
?>]]></programlisting>
    </example>
    
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->