<sect1 id="zend.controller.getting-started">
	<title>Pierwsze kroki</title>
	
	<sect2 id="zend.controller.getting-started.introduction">
		<title>Wprowadzenie</title>
		<para>
			Klasa <code>Zend_Controller</code> została zbudowana w sposób bardzo elastyczny.
            Można ją rozwijać rozszerzając klasy istniejące lub pisząc nowe klasy implementujące
			interfejsy <code>Zend_Controller_Router_Interface</code> oraz <code>Zend_Controller_Dispatcher_Interface</code>.
		</para>
	</sect2>
	
	<sect2 id="zend.controller.getting-started.server-configuration">
		<title>Konfiguracja serwera</title>
		<para>
			Klasa Zend_Controller została zbudowana w celu zapewnienia nowoczesnym witrynom
			estetycznych adresów URL (bez parametrów lub z ich małą ilością). Wymaga to
			zmian w konfiguracji serwera www w kwestii przekierowania żądań do pojedynczego
			pliku nazwanego "index.php". Ma on za zadanie ładować klasę <code>Zend_Controller_Front</code>.  
			Na serwerach Apache funkcjonalność taka jest dostarczana przez opcjonalny moduł mod_rewrite.
		</para>

		<para>
		    Pierwszym krokiem w konfiguracji serwera jest instalacja i uaktywnienie mod_rewrite. Następnym krokiem
			jest stworzenie dwóch plików w głównym katalogu serwera www: .htaccess oraz index.php. Plik .htaccess jest używany
			przez serwer Apache i musi zawierać reguły mod_rewrite aby przekierować wszystkie żądania do pliku index.php.
			Najprostszym rozwiązaniem jest napisanie reguły mod_rewrite, która przekieruje wszystkie żądania do pliku
			index.php z wyjątkiem żądań do plików o wybranych rozszerzeniach. Oto przykład takiego pliku:

			<programlisting role="php"><![CDATA[
RewriteEngine on
RewriteRule !\.(js|ico|gif|jpg|png|css)$ index.php
]]></programlisting>

			W powyższym przykładzie wszystkie żądania do plików o rozszerzeniach innych niż
			wymienione zostaną przekazane do pliku ładującego index.php. Jest to użyteczne podczas
			tworzenia aplikacji, jednak potem reguły powinny wyłączać konkretne katalogi.
		</para>
	</sect2>
	
	<sect2 id="zend.controller.getting-started.bootstrap">
		<title>Plik ładujący</title>
		
		<para>
		    Po ustawieniu pliku .htaccess file, utwórz nowy plik o nazwie <code>index.php</code>.  
		    Jest to plik ładujący. Jego zadaniem jest jedynie załadowanie klasy Zend_Controller_Front, 
		    która powinna być umieszczona poza głównym katalogiem serwera.
		</para>

		<note>	
		    Plik ładujący powinien być jedynym plikiem PHP umieszczonym w głównym
		    katalogu serwera www.
		</note>

		<para>
		    Ze względów bezpieczeństwa Zend odradza przechowywanie jakichkolwiek plików PHP
		    w ścieżkach dostępnych poprzez serwer www (wewnątrz głównego katalogu serwera www).
		    Jest to bardzo dobrą praktyką, powinna być ona stosowana zawsze gdy jest to możliwe.
		</para>

		<para>
			Utwórz plik ładujący o nazwie <code>index.php</code> w głównym katalogu serwera www aby
			załadować klasę Zend_Controller_Front:

			<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Front.php';

Zend_Controller_Front::run('/path/to/your/controllers')

?>]]></programlisting>

			Przeczytaj następna sekcję odnośnie do <code>/path/to/your/controllers</code>.

			Jak napisano w pliku <code>README.txt</code>, ścieżka do katalogu zawierającego bibliotekę Zend Framework 
			musi być podana w dyretywie <code>include_path</code>. Jeśli nie jest ona ustawiona
			w pliku <code>php.ini</code>, możesz użyć funkcji <code>set_include_path()</code> 
			w tym pliku, zanim użyjesz <code>require_once()</code>.
		</para>

		<note>
		    Obecnie szukamy sposobu nie wymagającego instalacji mod_rewrite. Chcemy zaproponować
		    konfigurację zarówno dla systemów używających mod_rewrite jak i dla tych które tego modułu
		    nie używają. Proszę także zwrócić uwagę na to, że ta funkcjonalność nie jest tylko przeznaczona
		    dla serwera Apache, ale także dla każdego innego serwera posiadającego podobne możliwości
		    w zakresie przekierowań żądań do plików.
		</note>
	</sect2>	
		
	<sect2 id="zend.controller.getting-started.directory-structure">
		<title>Struktura katalogów</title>
		
		<para>
		    Zalecane jest aby witryny zbudowane w oparciu o Zend Framework miały podobną
		    strukturę katalogów. Nie zawsze jest to możliwe, jednak w większości przypadków
		    jest. Zgodność z tą strukturą spowoduje, że kod będzie bardziej zrozumiały
		    dla osób zaznajomionych z konwencjami Zend Framework.
		</para>
		
		<para>	
		    Zalecena struktura katalogów dotyczy zarówno bibliotek (Zend oraz wszystkich innych)
		    jak i struktury katalogów samej aplikacji.

			<programlisting role="php"><![CDATA[
/application
  /models
  /views
  /controllers
/document_root
  /images
  /styles
  .htaccess
  index.php
/library
  /Zend
]]></programlisting>
		</para>
		
		<note>
			Ta sekcja nie jest jeszcze gotowa.
		</note>
	</sect2>	
		
	<sect2 id="zend.controller.overview.indexcontroller">
		<title>IndexController</title>

		<para>
		    Każda witryna musi mieć zdefiniowany kontroler o nazwie <code>IndexController</code>. Jest to kontroler
		    który jest wywoływany kiedy w adresie URL nie ma określonego kontrolera, np. w takim adresie:

			<programlisting role="php"><![CDATA[
http://framework.zend.com/
]]></programlisting>
		</para>

		<para>
			Klasa <code>IndexController</code> musi być umieszczona w pliku <code>IndexController.php</code>, a
			plik musi być umieszczony w katalogu kontrolerów. Klasa <code>IndexController</code> musi rozszerzać
			klasę <code>Zend_Controller_Action</code>. Oto przykład klasy <code>IndexController</code>:

			<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Action.php';

class IndexController extends Zend_Controller_Action 
{
	public function indexAction()
	{
		echo 'Hello from IndexController';
	}

	public function noRouteAction()
	{
		$this->_redirect('/');
	}
}

?>]]></programlisting>
			
			<note>
				Ta sekcja nie jest jeszcze gotowa.
			</note>			
		</para>
	</sect2>			
</sect1>