<sect1 id="zend.log.introduction">
    <title>Wprowadzenie</title>
    <para>
        <code>Zend_Log</code> jest uniwersalną klasą rejestrującą. <code>Zend_Log</code> 
        jest statyczną klasą, dla której nie możemy bezpośrednio utworzyć obiektu. 
        Przechowuje ona tablicę instancji obiektów <code>Zend_Log</code>, po jednej
        dla każdego z dzienników używanych przez aplikację. Kada instancja rejestratora używa 
        adaptera który implementuje interfejs <code>Zend_Log_Adapter_Interface</code>.
    </para>

    <para>
        Aby użyć klasy <code>Zend_Log</code>, załaduj za pomocą funkcji 
        <ulink url="http://php.net/include">include()</ulink> klasę <code>Zend_Log</code> 
        oraz wszystkie klasy adapterów które będą używane. Na przykład gdy aplikacja
        będzie rejestrowała do konsoli (domyślny bufor PHP) oraz do plików tekstowych,
        następujące pliki powinny być dołączone:

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                  // Podstawowa klasa Zend_Log
require_once 'Zend/Log/Adapter/Console.php';  // Adapter rejestrowania do konsoli
require_once 'Zend/Log/Adapter/File.php';     // Adapter rejestrowania do pliku
]]></programlisting>

        Klasa <code>Zend_Log</code> może być używana w uproszczonej formie dla pojedynczego
        dziennika, może być skonfigurowana dla wielu dzienników, może być także używana
        do rejestrowania wewnętrznych operacji wielu klas Zend Framework.
    </para>
</sect1>

<sect1 id="zend.log.simple-logging">
    <title>Rejestrowanie do pojedynczego dziennika</title>
    <para>
        Rejestrator jest tworzony poprzez wywołanie metody <code>Zend_Log::registerLogger()</code> 
        z argumentem w postaci instancji klasy <code>Zend_Log_Adapter_Interface</code>.

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                // Podstawowa klasa Zend_Log
require_once 'Zend/Log/Adapter/File.php';   // Adapter rejestrowania do pliku

// Utwórz rejestrator
Zend_Log::registerLogger(new Zend_Log_Adapter_File('/logs/simple.txt'));
]]></programlisting>
    </para>

    <para>
        Wiadomości są wysyłane do dziennika za pomocą metody <code>Zend_Log::log()</code>.

        <programlisting role="php"><![CDATA[
/**
 * Wysyła wiadomośc do dziennika.  Opcjonalny drugi argument określa priorytet wiadomości.
 * Jeśli priorytet nie zostanie podany, zostanie przyjęty domyślny LEVEL_DEBUG.
 */
Zend_Log::log('Pierwsza wiadomość.');

/**
 * Zapisuje wiadomość o wysokim priorytecie.
 */
Zend_Log::log('Wystąpił poważny błąd.', Zend_Log::LEVEL_SEVERE);
]]></programlisting>
    </para>
</sect1>

<sect1 id="zend.log.log-levels">
   <title>Priorytety wiadomości</title>
   <para>
       Metoda <code>Zend_Log::log()</code> będzie rejestrować wszystkie wiadomości nadając
       im priorytet  <code>LEVEL_DEBUG</code> dopóki inny priorytet nie zostanie
       podany jako drugi, opcjonalny argument. Następujące priorytety są dostępne jako
       stałe w klasie <code>Zend_Log</code>:

       <programlisting role="php"><![CDATA[
LEVEL_DEBUG     = 1
LEVEL_WARNING   = 4
LEVEL_ERROR     = 8
LEVEL_SEVERE    = 16
]]></programlisting>
   </para>
</sect1>

<sect1 id="zend.log.advanced-logging">
   <title>Zaawansowane logowanie: wiele dzienników</title>
   <para>
        Klasa <code>Zend_Log</code> umożliwia rejestrowanie do wielu dzienników. 
        Może wysyłać wiadomośc do wszystkich dzienników lub do konkretnego dziennika.
   </para>

   <para>
        Gdy tworzymy wiele rejestratorów, każdy z nich musi otrzymać unikalną nazwę.
        Rejestratory są tworzone za pomocą metody <code>registerLogger()</code> 
        z nazwą rejestratora podaną jako opcjonalny argument.
   </para>

   <para>
        W poniższym przykładzie tworzone są dwa rejestratory: jeden dla konsoli
        i jeden dla pliku. Zostaną one nazwane odpowiednio <code>Konsola</code> 
        oraz <code>Plik</code>.

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                 // Podstawowa klasa Zend_Log
require_once 'Zend/Log/Adapter/File.php';    // Adapter rejestrowania do pliku
require_once 'Zend/Log/Adapter/Console.php'; // Adapter rejestrowania do konsoli

Zend_Log::registerLogger(new Zend_Log_Adapter_File('/logs/framework.txt'), 'Plik');
Zend_Log::registerLogger(new Zend_Log_Adapter_Console(), 'Konsola');
]]></programlisting>
   </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->