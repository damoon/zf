<sect1 id="zend.service.rest">
    <title>Zend_Service_Rest</title>
    <sect2 id="zend.service.rest.introduction">
        <title>Wprowadzenie</title>
        <para>
            <code>Zend_Service_Rest</code> jest prostym klientem REST do przeprowadzania
            zapytań do dowolnego serwisu web opartego na REST.
        </para>
        <example>
            <title>Proste zapytanie REST</title>
            <para>
                W poniższym kodzie metoda <code>setUri()</code> ustawia <emphasis>bazowy</emphasis> 
                adres URI dla serwisu web REST. Następnie wywoływana jest metoda <code>restGet()</code> 
                w celu przeprowadzenia żądania GET pod podany adres z opcjonalną treścią zapytania.
            </para>
            <programlisting><![CDATA[<?php
require_once 'Zend/Service/Rest.php';

try {
    $rest = new Zend_Service_Rest();

    $rest->setURI('http://example.org');

    // Zwraca obiekt Zend_Http_Response
    $response = $rest->restGet('/services/rest', 'foo=bar&baz=bat');

    if ($response->isSuccessful()) {
        echo $response->getBody();
    } else {
        echo '<p>Wystąpił błąd</p>';
    }
} catch (Zend_Exception $e) {
        echo '<p>Wystąpił błąd (' .$e->getMessage(). ')<p>';
}
?>]]>       </programlisting>
        </example>
 	 	<note>
 	 	    <title>Przekazywanie</title>
 	 	    <para>
                Możesz przekazać odpowiednio sformatowaną treść zapytania (bez początkowego znaku zapytania "<code>?</code>") do
                metody <code>restGet()</code>, lub możesz przekazać tablicę asocjacyjną par nazwa-wartość. Niezależnie
                od tego, której z nich użyjesz, nazwy i wartości muszą być zakodowane dla URL (np. za pomocą
                <ulink url="http://php.net/urlencode"><code>urlencode()</code></ulink>).
            </para>
        </note>
        <para>
            Użycie metod <code>restPost()</code> oraz <code>restPut()</code> 
            jest identyczne jak użycie metody <code>restGet()</code>, ale dane są 
            wysyłane odpowiednio za pomocą HTTP POST lub PUT, zamiast GET.
        </para>
        <para>
            Metoda <code>restDelete()</code> operuje także na adresie, ale nie
            przyjmuje drugiego parametru, w którym są przekazywane dane.
        </para>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->