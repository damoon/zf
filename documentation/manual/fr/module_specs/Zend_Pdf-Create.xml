<sect1 id="zend.pdf.create">
    <title>Créer et charger des documents PDF</title>
    <para>
     La classe <code>Zend_Pdf</code> represente le document PDF en lui-même et fournis des méthode pour manipuler l'ensemble du document.
    </para>

    <para>
     Pour créer un nouveau document un nouvel objet <code>Zend_Pdf</code> doit être créé.
    </para>

    <para>
     La class <code>Zend_Pdf</code> fournis deux méthodes statiques pour charger un PDF existant.
     Ce sont les méthodes <code>Zend_Pdf::load()</code> et <code>Zend_Pdf::parse()</code>.
     Les deux retournent un objet <code>Zend_Pdf</code> ou lance une exception en cas d'erreur.
    </para>

    <example>
        <title>Créer un nouveau document PDF ou en charger un existant</title>
        <programlisting role="php"><![CDATA[<?php
...
/// Crée un nouveau document PDF.
$pdf1 = new Zend_Pdf();

// Charge un document PDF depuis un fichier.
$pdf2 = Zend_Pdf::load($fileName);

// Charge un document PDF depuis une string
$pdf3 = Zend_Pdf::parse($pdfString);
...
?>]]></programlisting>
    </example>

    <para>
    Le format de fichier PDF supporte la mise à jour incrementale d'un document.
    Ainsi chaque fois que le document est mis à jour, une nouvelle version du document est crée.
    Le module <code>Zend_Pdf</code> supporte la récupération d'une version spécifique.
    </para>
    <para>
     La version peut-être donné en second paramètre des méthodes <code>Zend_Pdf::load()</code>
     et <code>Zend_Pdf::parse()</code> ou obligatoire dans le cas d'un appel à <code>Zend_Pdf::rollback()</code>
        <footnote>
            <para>
             La méthode <code>Zend_Pdf::rollback()</code> doit être appellé avant tout changement. Sinon le comportement est indéfinis.
            </para>
        </footnote>
    </para>

    <example>
        <title>Demander une version particulière d'un document PDF</title>
        <programlisting role="php"><![CDATA[<?php
...
// Charge la version précedente d'un document PDF.
$pdf1 = Zend_Pdf::load($fileName, 1);

// Charge la version précedente d'un document PDF.
$pdf2 = Zend_Pdf::parse($pdfString, 1);

// Charge la première version d'un document
$pdf3 = Zend_Pdf::load($fileName);
$revisions = $pdf3->revisions();
$pdf3->rollback($revisions - 1);
...
?>]]></programlisting>
    </example>


</sect1>
<!--
vim:se ts=4 sw=4 et:
-->