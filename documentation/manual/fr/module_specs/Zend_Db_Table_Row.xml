<sect1 id="zend.db.tablerow">

    <title>Zend_Db_Table_Row</title>

    <sect2 id="zend.db.table.row.introduction">

        <title>Introduction</title>

        <para>
            <code>Zend_Db_Table_Row</code> constitue la passerelle du Framework Zend avec les données des lignes de votre base de données. 
            En général, vous n'instanciez pas directement <code>Zend_Db_Table_Row</code>; vous obtenez plutôt un objet Zend_Db_Table_Row comme 
            valeur de renvoi des méthodes <code>Zend_Db_Table::find()</code> et <code>Zend_Db_Table::fetchRow()</code>. Une fois que vous disposez d'un objet 
            <code>Zend_Db_Table_Row</code>, vous pouvez modifier les valeurs de l'enregistrement associé (représentées sous forme de propriétés de la classe) 
            et ensuite enregistrer les changements dans la table avec la méthode <code>save()</code>.
        </para>

    </sect2>

    <sect2 id="zend.db.table.row.fetch">

        <title>Aller chercher une ligne</title>

        <para>
             La première chose à faire consiste à instancier la classe <code>Zend_Db_Table</code>.
        </para>

        <programlisting role="php"><![CDATA[<?php
// définition d'un adaptateur
require_once 'Zend/Db.php';
$parametres = array (
    'adapter'  => 'PDO_MYSQL',
    'host'     => '127.0.0.1',
    'username' => 'arthur',
    'password' => '******',
    'dbname'   => 'camelot'
);

$db = Zend_Db::factory($parametres);

// on définit l'adaptateur par défaut de tous les objets Zend_Db_Table
require_once 'Zend/Db/Table.php';
Zend_Db_Table::setDefaultAdapter($db);

// on se relie à une table de la base de données
class TableRonde extends Zend_Db_Table {}
$table = new TableRonde();
?>]]>
        </programlisting>

        <para>
             Puis, on obtient un enregistrement particulier de la base de données en passant une clé à la méthode <code>Zend_Db_Table::find()</code>
             ou en utilisant la méthode <code>Zend_Db_Table::fetchRow()</code>. Le résultat renvoyé sera un objet <code>Zend_Db_Table_Row</code> dont chaque propriété 
             est un nom au format "notationCamel" correspondant au nom d'une colonne de la table au format "mots_separes_par_tirets_bas". 
             À titre d'exemple, la colonne dont le nom sera "nom_de_famille" correspondra à la propriété "nomDeFamille" au sein de l'objet.
        </para>

        <programlisting role="php"><![CDATA[<?php
// on va chercher un enregistrement particulier de la table sous forme d'objet
// Zend_Db_Table_Row
$ligne = $table->fetchRow('prenom = "Robin"');

//
// $ligne constitue maintenant un objet Zend_Db_Table_Row dont les propriétés
// publiques sont associées aux colonnes de la table :
//
// $ligne->id = '3'
// $ligne->titre = 'Sire'
// $ligne->prenom = 'Robin'
// $ligne->couleurPreferee = 'jaune'
//

?>]]>
        </programlisting>

    </sect2>

    <sect2 id="zend.db.table.row.modify">

        <title>Modifier les valeurs</title>

        <para>
             Modifier les valeurs de la ligne est très simple : travaillez simplement en manipulant les propriétés de l'objet 
             comme vous le feriez avec n'importe quel objet. Lorsque vous avez terminé, vous pouvez ensuite enregistrer de nouveau 
             la ligne dans la table avec la méthode <code>save()</code>.
        </para>

        <programlisting role="php"><![CDATA[<?php
// connexion à une table de la base de données
class TableRonde extends Zend_Db_Table {}
$table = new TableRonde();

// on va chercher un enregistrement particulier de la table sous forme d'objet
// Zend_Db_Table_Row
$ligne = $table->fetchRow('prenom = "Robin"');

//
// $ligne constitue maintenant un objet Zend_Db_Table_Row dont les propriétés
// publiques sont associées aux colonnes de la table :
//
// $ligne->id = '3'
// $ligne->titre = 'Sire'
// $ligne->prenom = 'Robin'
// $ligne->couleurPreferee = 'jaune'
//
// on change la couleur préférée et on enregistre le changement dans la table
$ligne->couleurPreferee = 'bleu';'
$ligne->save();
?>]]>
        </programlisting>

        <para>
             Toutefois, il n'est pas permis de changer la valeur d'une clé primaire; si vous faites cela, <code>Zend_Db_Table_Row</code> lancera une exception.
        </para>

        <programlisting role="php"><![CDATA[<?php
// connexion à une table de la base de données
class TableRonde extends Zend_Db_Table {}
$table = new TableRonde();

// on va chercher un enregistrement particulier de la table sous forme d'objet
// Zend_Db_Table_Row
$ligne = $table->fetchRow('prenom = "Robin"');

// peut-on changer la clé primaire "id"?
try {
    $ligne->id = 5;
    echo "Vous ne devriez pas voir ce message, car une exception devrait se 
déclencher.";
} catch (Zend_Db_Table_RowException $e) {
    echo $e->getMessage();
}
?>]]>
        </programlisting>
    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->