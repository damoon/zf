<sect1 id="zend.exception">
    <title>Zend::exception()</title>

    <para>Réalise le "lazy loading" d'une classe d'exception, instancie l'exception et la retourne.</para>

    <note>
        <title>Dépréciée :</title>
        <para>
            Cette méthode a été introduite dans la version 0.6.0 du Zend Framework.
            Il a été récemment décidé qu'il est préférable d'utiliser les
            méthodes traditionnelles pour instancier, lancer et rattraper les exceptions.
            La méthode <code>Zend::exception()</code> est dépréciée dans la version 0.6.1 du
            Zend Framework et sera supprimée dans une prochaine version Preview.
        </para>
    </note>

    <programlisting role="php"><![CDATA[<?php

Zend::exception($class, $message, $code);

?>]]></programlisting>

    <para>
        L'argument <code>$class</code> spécifie la classe d'exception à charger et à instancier
        et est chargée via <xref linkend="zend.loadclass" />; De fait, elle doit respecter les
        conventions de nommage des classes du framework et se situer dans un répertoire couvert
        par la configuration <code>include_path</code>.
    </para>

    <para>
        Les paramètres <code>$message</code> et <code>$code</code> sont tous deux optionnels et
        passés comme arguments au constructeur de la classe d'exception.
    </para>

    <para>
        En cas de succès, la classe d'exception est chargée et instanciée en
        utilisant les valeurs de <code>$message</code> et <code>$code</code>
        fournies. L'instance nouvellement créée est retournée. En cas d'échec
        du chargement de la classe ou si celle-ci n'étend pas <code>Exception</code>,
        une exception est lancée.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
