<sect1 id="zend.controller.getting-started">
	<title>Mise en Route</title>
	
	<sect2 id="zend.controller.getting-started.introduction">
		<title>Introduction</title>
		<para>
		    Le <code>Zend_Controller</code> a √©t√© construit dans un soucis permanent d'extensibilit√©, soit en cr√©ant 
		    des sous-classes de classes existantes, soit en √©crivant de nouvelles classes qui impl√©mentent les 
		    interfaces <code>Zend_Controller_Router_Interface</code> et <code>Zend_Controller_Dispatcher_Interface</code>.
		</para>
	</sect2>
	
	<sect2 id="zend.controller.getting-started.server-configuration">
		<title>Configuration Serveur</title>
		<para>
		    Le Zend_Controller est construit pour supporter les sites web modernes, avec des URI propres (peu voire pas de param√®tres de requ√™tes). 
		    En tant que telle, la configuration du serveur web doit permettre la reformulation des URI afin de rediriger toutes les requ√™tes sur un mÍme 
		    un m√™me fichier, appel√© ici "<code>index.php</code>", qui va simplement amorcer <code>Zend_Controller_Front</code>. 
		    Sur les serveurs Web Apache, cela est pris en charge par le module <code>mod_rewrite</code>.
		</para>

		<para>
		    La premi√®re √©tape dans la configuration du serveur est d'installer et d'activer le module <code>mod_rewrite</code>. 
		    L'√©tape suivante est de mettre deux fichiers dans le document root: <code>.htaccess</code> et <code>index.php</code>. 
		    Le fichier <code>.htaccess</code> est utilis√© par Apache et doit contenir des r√®gles pour rediriger toutes les requ√™tes sur <code>index.php</code>. 
		    Pour les phases de d√©veloppement, il est souvent plus simple d'√©crire une r√®gle <code>mod_rewrite</code> qui va rediriger toutes les requ√™tes sur <code>index.php</code>, 
		    sauf pour certaines extensions de fichier. 
		    Voici un exemple de ce fichier :

			<programlisting role="php"><![CDATA[
RewriteEngine on
RewriteRule !\.(js|ico|gif|jpg|png|css)$ index.php
]]></programlisting>
            Dans l'exemple ci-dessus, toutes les requ√™tes ne contenant pas les extensions mentionn√©es seront redirig√©es vers index.php
            C'est utile pendant les phases de d√©veloppement, cependant une fois en production, les r√®gles de r√©-√©criture devront √™tre √©crite pour exclure 
            aussi les dossiers.
		</para>
	</sect2>
	
	<sect2 id="zend.controller.getting-started.bootstrap">
		<title>Fichier d'Amor√ßage</title>
		
		<para>
		    Apr√®s avoir mis en place le fichier <code>.htaccess</code>, cr√©ez un nouveau fichier appel√© <code>index.php</code>. 
		    C'est un fichier d'amor√ßage. Le but du fichier <code>index.php</code> est seulement d'amorcer <code>Zend_Controller_Front</code>, 
		    qui dans l'id√©al, devrait √™tre plac√© √† l'ext√©rieur du r√©pertoire racine.
		</para>

		<note>	
			 Le fichier d'amor√ßage doit √™tre le seul fichier PHP du r√©pertoire racine.	
		</note>

		<para>
			Pour des raisons de s√©curit√©, Zend pr√©conise de ne stocker aucun fichier PHP dans le r√©pertoire accessible par le serveur Web 
			(ceux-ci sont sous le r√©pertoire racine). Bien que √ßa ne soit pas toujours possible, comme par exemple dans le cas d'h√©bergement 
			mutualis√©s, ceci devrait √™tre consid√©r√© comme une bonne pratique et mis en place autant que possible.
		</para>

		<para>
		     Cr√©ez le fichier d'amor√ßage <code>index.php</code>, dans le r√©pertoire racine pour amorcer <code>Zend_Controller_Front</code>:

			<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Front.php';

Zend_Controller_Front::run('/chemin/de/vos/controlleurs')

?>]]></programlisting>
            
            Reportez vous √† la prochaine partie pour ce qui concerne <code>/chemin/de/vos/controlleurs</code>. 
            Comme d√©finit dans le fichier <code>README.txt</code>, le r√©pertoire du Framework Zend doit √™tre dans l'<code>include_path</code>. 
            Si ce n'est pas d√©fini dans le <code>php.ini</code>, <code>set_include_path()</code>  peut-√™tre appel√©e dans ce fichier avant <code>require_once()</code>.
		</para>

		<note>
			A ce stade, nous sommes en train de rechercher des solutions qui ne n√©cessite par l'installation de mod_rewrite. 
			Nous envisageons de proposer une configuration pour les syst√®mes avec ou sans installation de mod_rewrite. 
			Veuillez notez √©galement que ce syst√®me n'est pas li√© sp√©cifiquement √† Apache, tout autre serveur Web ayant des 
			possibilit√©s similaires de redirection devrait suffire.
		</note>
	</sect2>	
		
	<sect2 id="zend.controller.getting-started.directory-structure">
		<title>Arborescence des R√©pertoires</title>
		
		<para>
		    Il est recommand√© que les site Web utilisant le Framework Zend partagent une m√™me arborescence. 
		    Bien que cela ne soit pas possible dans tous les cas, il l'est pour beaucoup. 
		    Choisir de se conformer √† cette structure va rendre votre code plus facilement compr√©hensible pour quelqu'un 
		    de familier avec les conventions du Framework Zend.
		</para>
		
		<para>	
            L'arborescence propos√©e consiste en un r√©pertoire contenant les biblioth√®ques (de Zend ou autre) et un r√©pertoire contenant l'application.

			<programlisting role="php"><![CDATA[
/application
  /models
  /views
  /controllers
/document_root
  /images
  /styles
  .htaccess
  index.php
/library
  /Zend
]]></programlisting>
		</para>
		
		<note>
			 Cette section n'est pas encore compl√®te. Elle est encore en construction, et est sujette √† changements.
		</note>
	</sect2>	
		
	<sect2 id="zend.controller.overview.indexcontroller">
		<title>IndexController</title>

		<para>
		    Chaque site doit d√©finir un contr√¥leur nomm√© <code>IndexController</code>. 
		    C'est le contr√¥leur qui est utilis√© quand aucun contr√¥leur n'est d√©finit dans l'URI, comme dans cette URI :

			<programlisting role="php"><![CDATA[
http://framework.zend.com/
]]></programlisting>
		</para>

		<para>
		    La classe <code>IndexController</code> doit √™tre enregistr√©e dans un fichier appel√© <code>IndexController.php</code>, 
		    et elle doit √™tre stock√©e dans le r√©pertoire des contr√¥leurs. 
		    L'<code>IndexController</code> doit √™tre une sous-classe de <code>Zend_Controller_Action</code>. 
		    Voici un exemple du contenu d'<code>IndexController</code> :

			<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Action.php';

class IndexController extends Zend_Controller_Action 
{
	public function indexAction()
	{
		echo 'Hello from IndexController';
	}

	public function noRouteAction()
	{
		$this->_redirect('/');
	}
}

?>]]></programlisting>
			
			<note>
				 Cette section n'est pas encore termin√©e. Elle est encore en construction et est sujette aux changements.
			</note>			
		</para>
	</sect2>			
</sect1>