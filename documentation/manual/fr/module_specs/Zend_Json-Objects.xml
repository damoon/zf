<sect1 id="zend.json.objects">
    <title>Objets JSON</title>
    <para>
        Lorsque vous encodez des objets PHP en tant que JSON, toutes les propriétés publiques de cet objet sont encodées dans un objet JSON.
    </para>
    <para>
        Bien que les objets Javascript correspondent de très près aux tableau associatifs de PHP, décoder des objets JSON pose une légère difficulté.
        Certains suggèrent qu'un identifiant de classe soit passé, et qu'une instance de cette classe soit créée et définie avec les paires clé/valeur des 
        objets JSON; d'autres pensent que cela pourrait poser un risque de sécurité potentiel.
    </para>
    <para>
        Par défaut, <code>Zend_Json</code> décodera des objets JSON comme en tableaux associatifs. Cependant, si vous désirez avoir un objet en retour, vous
        pouvez le spécifier :
        <programlisting role="php"><![CDATA[<?php
// Décode des objets en tant qu'objets
$phpNatif = Zend_Json::decode($valeurEncodee, Zend_Json::TYPE_OBJECT);
?>]]></programlisting>
        Tous les objets sont ainsi décodés et retournés comme des objets de type <code>StdClass</code>, avec leurs propriétés correspondantes aux paires
        clé/valeur de la notation JSON.
    </para>
    <para>
        La recommandation du Framework Zend est que le développeur doit décider comment décoder les objets JSON.
        Si un objet d'un type spécifié doit être créé, il peut être créé dans le code du développeur et définit avec les valeurs
        décodées en utilisant <code>Zend_Json</code>.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
