<sect1 id="zend.loadclass">
    <title>Zend::loadClass()</title>
    <para>
        <code>Zend::loadClass()</code> загружает файл PHP и проверяет наличие
        класса.
<!--
        <code>Zend::loadClass($class, $dirs)</code> loads a PHP file
        and then checks for the existance of the class.
-->
    </para>

    <programlisting role="php"><![CDATA[<?php

Zend::loadClass('Container_Tree', array('/home/production/mylib', '/home/production/myapp'));

?>]]></programlisting>

    <para>
        <code>$class</code> сначала преобразуется в путь в иерархии классов
        посредством замены знаков подчеркивания на разделители директорий, затем
        присоединяется к каждому пути в <code>$dirs</code>. Если 
        <code>$dirs</code> равен <code>null</code>, то в результате 
        будет только один путь (путь в иерархии классов).
        Например, <code>Container_Tree</code> будет
        преобразован в <code>Container/Tree.php</code>. Если файл
        <code>/home/production/mylib/Container/Tree.php</code> существует,
        то он будет включен. Если нет, то будет включен
        <code>/home/production/myapp/Container/Tree.php</code>, если существует.
        Иначе будет производиться поиск <code>Container/Tree.php</code> в
        include path.
<!--
        After converting <code>$class</code> to a path hierarchy by substituting directory separators
        for any underscores, the resulting hierarchy is appended to each path in <code>$dirs</code>
        If <code>$dirs</code> is <code>null</code>, then the result will contain only the single hierarchy.
        For example, <code>Container_Tree</code> becomes <code>Container/Tree.php</code>.
        If <code>/home/production/mylib/Container/Tree.php</code> exists, then it will be included.
        If not, then <code>/home/production/myapp/Container/Tree.php</code> will be included, if it exists.
        Otherwise, PHP's include path will be searched for <code>Container/Tree.php</code>.
-->
    </para>

    <para>
        Если <code>$dirs</code> является строкой или массивом, то поиск по
        директориям производится в том порядке, в котором они приведены, и
        первый найденный файл будет включен. Если по вычисленным путям файл не
        существует, то оператор <code>include</code> будет использовать
        include_path для поиска файла.
<!--
        If <code>$dirs</code> is a string or an array, the directories are searched
        in the order supplied, and the first matching file will be included.

        If the file does not exist in the calculated <code>$dirs</code>, then PHP's include_path
        will be used by the <code>include</code> statement (i.e. <code>include 'Tree.php'</code>).
-->
    </para>

    <para>
        Если файл не найден или запрошенный класс в нем не существует, то будет
        сгенерировано исключение <code>Zend_Exception</code>. Для загрузки
        используется <code>Zend::loadFile()</code>, поэтому класс должен
        содержать только алфавитно-цифровые символы, тире ('-'), знак
        подчеркивания ('_') и точку ('.'). 
<!--
        If the file is not found or the class does not exist after the load, a <code>Zend_Exception</code> is
        thrown. <code>Zend::loadFile()</code> is used for loading, so the class name may only contain alphanumeric
        characters and the hyphen ('-'), underscore ('_'), and period ('.').
-->
    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
