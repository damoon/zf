<sect1 id="zend.search.java-lucene">
    <title>Взаимодействие с Java Lucene<!--Interoperating with Java Lucene--></title>

	<sect2 id="zend.search.index-creation.file-formats">
		<title>Форматы файлов<!--File Formats--></title>
        <para>
        Форматы файлов индекса Zend_Search_Lucene являются совместимыми с Lucene
        версии 1.4 и выше.
<!--
          Zend_Search_Lucene index file formats are binary compatible with a Lucene
          version 1.4 and above.
-->
        </para>
    
        <para>
        Подробное описание этого формата можно прочитать здесь:
<!--
          A detailed description of this format is available here:
-->
          <ulink url="http://lucene.apache.org/java/docs/fileformats.html"/>.
        </para>
	</sect2>	
    
    <sect2 id="zend.search.index-creation.index-directory">
        <title>Директория для индекса<!--Index Directory--></title>
    
        <para>
        После создания индекса директория для индекса будет содержать несколько файлов:
<!--
        After index creation, the index directory will contain several files:
-->
        </para>
    
        <itemizedlist>
            <listitem>
                <para>
                файл <filename>segments</filename> является списком сегментов индекса.
<!--
                <filename>segments</filename> file is a list of index segments.
-->
                </para>
            </listitem>
            <listitem>
                <para>
                файлы <filename>*.cfs</filename> содержат сегменты индекса.
                Внимание! Оптимизированный индекс всегда имеет только один сегмент.
<!--
                <filename>*.cfs</filename> files contain index segments.
                Note! Optimized index has always only one segment.
-->
                </para>
            </listitem>
            <listitem>
                <para>
                файл <filename>deletable</filename> является списком файлов,
                которые больше не используются индексом, но которые нельзя было удалить. 
<!--
                <filename>deletable</filename> file is a list of files that are no longer used
                by the index, but which could not be deleted.
-->
                </para>
            </listitem>
        </itemizedlist>
    </sect2>	
	
	<sect2 id="zend.search.java-lucene.source-code">
		<title>Исходный код Java<!--Java Source Code--></title>
        <para>
            Приведенный ниже листинг программы на Java представляет собой пример
            того, как индексировать файл, используя Java Lucene: 
<!--
            The Java program listing below provides an example of how to index a file
            using Java Lucene:
-->
        </para>
    
        <programlisting role="java"><![CDATA[
/**
* Создание индекса:
*/
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.document.*;

import java.io.*

...

IndexWriter indexWriter = new IndexWriter("/data/my_index", 
                                          new SimpleAnalyzer(), true);

...

String filename = "/path/to/file-to-index.txt"
File f = new File(filename);

Document doc = new Document();
doc.add(Field.Text("path", filename));
doc.add(Field.Keyword("modified",DateField.timeToString(f.lastModified())));
doc.add(Field.Text("author", "unknown"));
FileInputStream is = new FileInputStream(f);
Reader reader = new BufferedReader(new InputStreamReader(is));
doc.add(Field.Text("contents", reader));

indexWriter.addDocument(doc);]]>
        </programlisting>
    </sect2>
        
    <sect2 id="zend.search.java-lucene.jar">  
        <title><!--Using-->Использование LuceneIndexCreation.jar</title>
	
        <para>
            Для того, чтобы можно было сразу начать работать с
            Zend_Search_Lucene, файл JAR (JAVA) уже создан с тем, чтобы
            можно было генерировать индекс из командной строки.
            За более подробной информацией о файлах JAR, см.
            <ulink url="http://java.sun.com/docs/books/tutorial/jar/basics/index.html"/>.
<!--
            To get started with Zend_Search_Lucene quickly, a JAR file (Java) has been created to
            generate an index from the command line.  For more information on JAR files,
            please visit: <ulink url="http://java.sun.com/docs/books/tutorial/jar/basics/index.html"/>.
-->
        </para>
    
        <para>
            LuceneIndexCreation.jar принимает текстовые файлы и создает из них индекс.
            Использование:
<!--
            LuceneIndexCreation.jar consumes text files and builds an index from them.  Usage:
-->
        </para>
        
        <programlisting role="java"><![CDATA[
    java -jar LuceneIndexCreation.jar [-c] [-s] <document_dir> <index_dir>
    -c   - force index to be case sensitive
    -s   - store content in the index
    ]]></programlisting>
    
        <para>
            Эта команда принимает директорию <code>&lt;document_dir&gt;</code>,
            включая все ее вложенные директории, и создает индекс Lucene.
            Индекс является набором файлов, которые будут сохранены в отдельной
            директории, которая задается через <code>&lt;index_dir&gt;</code>.
<!--
            This command consumes the directory <code>&lt;document_dir&gt;</code>, including all of its subdirectories,
            and produces a Lucene index.  The index is a set of files that will be stored in a separate
            directory that is specified by <code>&lt;index_dir&gt;</code>.
-->
        </para>
    
        <para>
            Для каждого индексируемого документа LuceneIndexCreation создает
            объект документа с тремя полями: поле <emphasis>contents</emphasis>,
            содержащее тело документа, поле <emphasis>modified</emphasis>,
            содержащее время изменения файла, и полный путь с именем файла в
            поле <emphasis>path</emphasis>.  
<!--
            For each document to be indexed, LuceneIndexCreation creates a document object with three
            fields: a <emphasis>contents</emphasis> field containing the contents (body) of the document,
            a <emphasis>modified</emphasis> field containing the file modification time, and
            the full path and filename in a <emphasis>path</emphasis> field.
-->
        </para>
    
        <para>
            Если указана опция <option>-c</option>, то индекс становится чувствительным
            к регистру. Иначе перед добавлением в индекс все элементы
            приводятся к нижнему регистру.
<!--
            If <option>-c</option> is specified, then index is forced to be
            case sensitive. Otherwise all terms are converted to lower case
            before to be added into the index.
-->
        </para>
    
        <para>
            Если указана опция <option>-s</option>, то содержимое документа 
            тоже сохраняется в индексе и сожет быть получено с помощью
            полей <code>path</code> и <code>modified</code>.
<!--
            If <option>-s</option> is specified, then document's content is also stored in the index
            and can be retrieved with <code>path</code> and <code>modified</code> fields.
-->
        </para>
        
        <para>
            Иначе сохраняются только поля <code>path</code> и <code>modified</code>,
            поле <code>contents</code> только индексируется. В этом случае
            содержимое документа должно быть получено из источника
            через его путь.
<!--
            Otherwise only <code>path</code> and <code>modified</code> fields are stored,
            and <code>contents</code> field is only indexed. In this case document content must
            be retrieved from an original source by its path.
-->
        </para>
        
        <para>
            Будьте осторожны -- применение опции <option>-s</option>
            увеличивает объем индекса примерно в пять раз.   
<!--
            Please be careful, using <option>-s</option> option increases index
            size near five times.
-->
        </para>
	</sect2>

</sect1>

<!--
vim:se ts=4 sw=4 et:
-->
