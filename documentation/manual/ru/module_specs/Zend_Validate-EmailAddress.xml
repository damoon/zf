<sect1 id="zend.validate.validating_email_addresses">

    <title>Validating Email Addresses</title>

    <para>
        Zend_Validate_Email allows you to validate an email address. The validator first splits the email 
        address on local-part @ hostname and attempts to match these against known specifications for 
        email addresses and hostnames.
    </para>
    
    <para>
        <emphasis role="strong">Basic usage</emphasis>
    </para>
    
    <para>
        A basic example of usage is below:
        
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Validate/EmailAddress.php';
$validator = new Zend_Validate_EmailAddress();
if ($validator->isValid($email)) {
    // email appears to be valid
} else {
    // email is invalid; print the reasons
    foreach ($validator->getMessages() as $message) {
        echo "$message\n";
    }
}]]></programlisting>

        This will match the email address <code>$email</code> and on failure populate 
        <code>$validator->getMessages()</code> with useful error messages.
        
    </para>
    
    
    <para>
        <emphasis role="strong">Complex local parts</emphasis>
    </para>    
    
    <para>
        Zend_Validate_Email will match any valid email address according to RFC2822. For example, 
        valid emails include <code>bob@domain.com</code>, <code>bob+jones@domain.us</code>, 
        <code>"bob@jones"@domain.com</code> and <code>"bob jones"@domain.com</code>
        
        Some obsolete email formats will not currently validate (i.e. carriage returns or a 
        "\" character in an email address).
    </para>
    
    <para>
        <emphasis role="strong">Validating different types of hostnames</emphasis>
    </para>
    
    <para>
        The hostname part of an email address is validated against Zend_Validate_Hostname. By default 
        only DNS hostnames of the form <code>domain.com</code> are accepted, though if you wish you 
        can accept IP addresses and Local hostnames too. 
        
        To do this you need to instantiate Zend_Validate_EmailAddress passing a parameter to indicate
        the type of hostnames you want to accept. More details are included in Zend_Validate_Hostname 
        though an example of how to accept both DNS and Local hostnames appears below:
        
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Validate/EmailAddress.php';
$validator = new Zend_Validate_EmailAddress(Zend_Validate_Hostname::ALLOW_DNS | Zend_Validate_Hostname::ALLOW_LOCAL);
if ($validator->isValid($email)) {
    // email appears to be valid
} else {
    // email is invalid; print the reasons
    foreach ($validator->getMessages() as $message) {
        echo "$message\n";
    }
}]]></programlisting>

    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->