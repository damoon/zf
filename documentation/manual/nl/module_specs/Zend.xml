<sect1 id="zend.introduction">
    <title>Inleiding</title>
    <para>
    De Zend klasse is de fundering (basis) van het Zend Framework. Deze klasse 
    is tot stand gekomen doordat het framework het DRY (Don't Repeat Yourself) 
    principe - dat aan de basis van het Zend Framework ligt - hanteert. Deze 
    klasse bevat enkel statische methodes waarvan de functionaliteit nodig is 
    in vele componenten van het Zend Framework.
    </para>
</sect1>

<sect1 id="zend.loadfile">
    <title>Zend::loadFile()</title>

    <para>
    <code>Zend::loadFile()</code> laadt een PHP bestand dat PHP code kan bevatten. 
	Het is een "wrapper" voor de PHP functie 
	<ulink url="http://php.net/include"><code>include()</code></ulink> die een
    <code>Zend_Exception</code> zal doorgeven in geval van mislukking.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
loadFile($filename, $dirs=null, $once=false)

?>]]></programlisting>

    <para>Het <code>$filename</code> argument specificeert het bestand 
	dat moet worden geladen. Let op: $filename mag geen padinformatie bevatten. 
	Er wordt een veiligheidscheck gedaan op <code>$filename</code>. 
	<code>$filename</code> kan enkel alfanumerieke tekens, min-tekens ("-"), 
	underscores ("_") of punten (".") bevatten. Deze beperkingen zijn niet van van 
	toepassing op het argument <code>$dirs</code>.
    </para>

    <para>Het argument <code>$dirs</code> specificeert de paden of het pad waarin het 
	bestand moet worden gezocht. Indien <code>NULL</code>, zal er enkel in het 
	<code>include_path</code> worden gezocht. Indien het een string of een array is, 
	zal er in de gespecificeerde paden en het <code>include_path</code> worden gezocht.
    </para>

    <para>
	Het argument <code>$once</code> is een boolean die aanduidt of de PHP 
	functie <ulink url="http://php.net/include"><code>include()</code></ulink>
	of <ulink url="http://php.net/include_once"><code>include_once()</code></ulink> 
	moet worden gebruikt om het bestand te laden.
    </para>
</sect1>

<sect1 id="zend.loadclass">
    <title>Zend::loadClass()</title>
    <para>
    <code>Zend::loadClass()</code> laadt een PHP bestand waarvan de bestandsnaam 
	opgebouwd is in het volgende formaat: "<code>$className.php</code>". Het bestaan 
	van de klasse <code>$className</code> zal worden nagegaan.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
loadClass($class, $dirs)

?>]]></programlisting>

    <para>
	Indien er wordt vastgesteld dat het bestand niet werd gevonden 
	of de klasse niet bestaat zal er een <code>Zend_Exception</code> worden doorgegeven.
	<code>Zend::loadFile()</code> wordt gebruikt voor het laden van het bestand.
	Het <code>$dirs</code> argument wordt er onmiddellijk aan doorgegeven...
    </para>

    <para>
	Indien u een klasse opvraagt met underscores in de naam en <code>$dirs</code>
	is null (standaard waarde), zal <code>Zend::loadClass()</code> zelf de
	<code>$dirs</code> kunnen achterhalen. Alle underscores die in het <code>$class</code> 
	argument voorkomen, zullen geconverteerd worden naar padscheiders. Bijvoorbeeld, 
	indien <code>$class</code> de waarde <code>Zend_Example_Class</code> heeft, zal dit 
	gemapt worden naar het pad <code>Zend/Example/Class.php</code>.
    </para>
</sect1>

<sect1 id="zend.loadinterface">
    <title>Zend::loadInterface()</title>
    <para>
    <code>Zend::loadInterface()</code> werkt net zoals <code>Zend::loadClass()</code>, 
	maar laadt een interface in plaats van een klasse.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
loadInterface($interface, $dirs)

?>]]></programlisting>

    <para>
	De methode <code>Zend::loadClass()</code> kan niet gebruikt worden voor 
	het laden van interfaces omdat de PHP functie 
	<ulink url="http://php.net/class_exists"><code>class_exists()</code></ulink>
	het bestaan van interfaces niet kan nagaan (sinds PHP 5.0.2).
	Gebruik <code>Zend::loadInterface()</code> in plaats ervan.
    </para>

    <para>
	Indien je een interface opvraagt met underscores in de naam en <code>$dirs</code>
	is null (standaard waarde), zal <code>Zend::loadInterface()</code> zelf de
	<code>$dirs</code> kunnen achterhalen. Alle underscores die in het <code>$interface</code> 
	argument voorkomen, zullen geconverteerd worden naar padscheiders. 
	Bijvoorbeeld, indien <code>$interface</code> de waarde
    <code>Zend_Example_Interface</code> heeft, zal dit gemapt worden naar het pad
    <code>Zend/Example/Interface.php</code>.
    </para>
</sect1>

<sect1 id="zend.isreadable">
    <title>Zend::isReadable()</title>

    <para>Geeft de waarde <code>TRUE</code> terug indien een bestand leesbaar
	is, anders <code>FALSE</code>.</para>

    <programlisting role="php"><![CDATA[<?php
	
isReadable($filename)

?>]]></programlisting>

    <para>Het argument <code>$filename</code> specificeert de bestandsnaam die
	nagegaan dient te worden. Deze mag geen padinformatie bevatten. Deze methode is
	een "wrapper" voor de PHP functie
	<ulink url="http://php.net/is_readable"><code>is_readable()</code></ulink>.
	De PHP functie zoekt niet in <code>include_path</code>, terwijl 
	<code>Zend::isReadable()</code> dat wel doet.
    </para>
</sect1>

<sect1 id="zend.dump">
    <title>Zend::dump()</title>

    <para>
	<code>Zend::dump()</code> geeft informatie over een uitdrukking weer 
	(of geeft deze terug). Het is een "wrapper" voor de PHP functie
	<ulink url="http://php.net/var_dump"><code>var_dump()</code></ulink>. Ze
	omvat de weergave in (X)HTML <code>&lt;pre&gt;</code> tags en
	kan die optioneel prefixen met een stuk tekst.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
dump($var, $label=null, $echo=true)

?>]]></programlisting>

    <para>
	Het <code>$var</code> argument specificeert de uitdrukking of variabele
	waarvan de informatie zal worden opgevraagd.
    </para>

    <para>
	<code>$label</code> is optioneel en kan eender welke tekst bevatten. Die zal
	dan voor de weergave van <code>Zend::dump()</code> worden weergegeven.
	Dit is handig wanneer je informatie over meerdere variabelen op een enkele
	pagina weer wil geven.
    </para>

    <para>
	De boolean <code>$echo</code> bepaalt of de output van
	<code>Zend::dump()</code> wordt weergegeven of niet. Indien het <code>TRUE</code>
	is, wordt deze weergegeven. Ongeacht de waarde van <code>$echo</code> zal de
	output altijd worden terugegeven.
    </para>
</sect1>


<sect1 id="zend.register">
    <title>Zend::register()</title>

    <para>
	Een object in het register opslaan.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
register($name, $object)

?>]]></programlisting>

    <para>
	Het register is een mechanisme voor het verstrekken van "singleton" instanties 
	van objecten aan de toepassingsruimte. Het object wordt slechts éénmaal
	opgeslagen en kan opgevraagd worden wanneer nodig. Het is steeds dezelfde
	instantie van het object dat wordt terugegeven.
    </para>

    <para>
	<code>$name</code> is eender welke string die toelaat het object een naam
	te geven in de objectenlijst. Deze naam kan dan aan <code>Zend::registry()</code>
	worden doorgegeven om het object opnieuw te verkrijgen.
    </para>

    <para>
	Het <code>$name</code> argument moet een string zijn, alleen objecten mogen
	opgeslagen worden in het register. Een object kan nooit worden verwijderd
	uit het register en een objectinstantie kan slechts éénmaal worden
	opgeslagen in het register.
	Het niet nakomen van deze regels zal een <code>Zend_Exception</code> doorgeven.
    </para>
</sect1>

<sect1 id="zend.registry">
    <title>Zend::registry()</title>

    <para>
	Geeft een object, of een lijst van alle objecten in het register terug.
    </para>

    <programlisting role="php"><![CDATA[<?php
	
registry($name=null)

?>]]></programlisting>

    <para>
	Indien het <code>$name</code> argument <code>NULL</code> is zal een array 
	teruggegeven worden waarvan de keys de namen van de objecten in het register 
	zijn en de waarden de klassenamen van de objecten.
    </para>

    <para>
	Als <code>$name</code> een string is zal het overeenstemmende object  
	worden teruggegeven. Indien er geen object bestaat in het register met
	de naam <code>$name</code> zal er een  <code>Zend_Exception</code>
	worden doorgegeven.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->