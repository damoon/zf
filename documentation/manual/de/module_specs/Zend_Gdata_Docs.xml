<sect1 id="zend.gdata.docs">
    <title>Verwenden der Google Dokumente Listen Daten API</title>

    <para>
        Die Google Dokumente Listen Daten API erlaubt es Client Anwendungen Dokumente zu Google Dokumente
        hochzuladen und diese in der Form von Google Daten API ("GData") Feeds aufzulisten. Die Client
        Anwendung kann eine Liste von Benutzer Dokumenten anfragen, und den Inhalt in einem existierenden
        Dokument abfragen.
    </para>

    <para>
        Siehe
        <ulink url="http://code.google.com/apis/documents/overview.html">http://code.google.com/apis/documents/overview.html</ulink>
        für weitere Informationen über die Google Dokumente Listen API.
    </para>

    <sect2 id="zend.gdata.docs.listdocuments">
        <title>Eine Liste von Dokumenten erhalten</title>
        <para>
            Man kann eine Liste von den Google Dokumenten für einen bestimmten Benutzer erhalten  indem die
            <code>getDocumentListFeed</code> Methode des Docs Services verwendet wird. Das Service gibt ein
            <code>Zend_Gdata_Docs_DocumentListFeed</code> Objekt zurück das eine Liste von dokumenten enthält
            die mit dem authentifizierten Benutzer assoziiert sind.
        </para>

        <programlisting role="php"><![CDATA[<?php
$service = Zend_Gdata_Docs::AUTH_SERVICE_NAME;
$client = Zend_Gdata_ClientLogin::getHttpClient($user, $pass, $service);
$docs = new Zend_Gdata_Docs($client);
$feed = $docs->getDocumentListFeed();]]>
        </programlisting>

        <para>
            Das sich ergebende <code>Zend_Gdata_Docs_DocumentListFeed</code> Objekt repräsentiert die Antwort
            des Servers. Dieser Feed enthält eine Liste von <code>Zend_Gdata_Docs_DocumentListEntry</code>
            Objekten (<code>$feed->entries</code>), wobei jeder von Ihnen ein einzelnes Google Dokument
            repräsentiert.
        </para>
    </sect2>

    <sect2 id="zend.gdata.docs.creating">
        <title>Ein Dokument hochladen</title>
        <para>
            Man kann ein neues Google Dokument erstellen indem ein Wortbearbeitungs Dokument, eine
            Tabellenkalkulation oder eine Präsentation hochgeladen wird. Dieses Beispiel ist vom interaktiven
            Docs.php Beispiel welches mit der Bibliothek kommt. Es demonstriert das Hochladen einer Datei und
            das Ausdrucken der Information über das Ergebnis vom Server.
        </para>
        <programlisting role="php"><![CDATA[<?php
/**
 * Ein spezielles Dokument hochladen
 *
 * @param Zend_Gdata_Docs $docs Das Service Objekt das für die Kommunikation mit dem Google Dokumenten Service
 *     verwendet wird.
 * @param boolean $html True wenn die Ausgabe für die Ausgabe in einem Web Browser formatiert sein soll.
 * @param string $originalFileName Der Name der Datei die hochgeladen werden soll. Der Mime-Typ dieser Datei
 *     wird von der erweiterung des Dateinamens eruiert. Zum Beispiel wird test.csv als Komma geteilter
 *     Inhalt hochgeladen und in eine Tabellenkalkulation konvertiert.
 * @param string $temporaryFileLocation (Optional) Die Datei in der die Daten für das Dokument gespeichert werden.
 *     Das wird verwendet wenn die Datei von der Maschine des Clients zum Server hochgeladen und in einer
 *     temporären Datei gespeichert wurde die keine Erweiterung hat. Wenn dieser Parameter null ist, wird die
 *     Datei von originalFileName gelesen.
 */
function uploadDocument($docs, $html, $originalFileName,
                        $temporaryFileLocation) {
  $fileToUpload = $originalFileName;
  if ($temporaryFileLocation) {
    $fileToUpload = $temporaryFileLocation;
  }

  // Upload the file and convert it into a Google Document. The original
  // file name is used as the title of the document and the mime type
  // is determined based on the extension on the original file name.
  $newDocumentEntry = $docs->uploadFile($fileToUpload, $originalFileName,
      null, Zend_Gdata_Docs::DOCUMENTS_LIST_FEED_URI);

  echo "New Document Title: ";

  if ($html) {
      // Find the URL of the HTML view of this document.
      $alternateLink = '';
      foreach ($newDocumentEntry->link as $link) {
          if ($link->getRel() === 'alternate') {
              $alternateLink = $link->getHref();
          }
      }
      // Make the title link to the document on docs.google.com.
      echo "<a href=\"$alternateLink\">\n";
  }
  echo $newDocumentEntry->title."\n";
  if ($html) {echo "</a>\n";}
}]]>
        </programlisting>
    </sect2>

    <sect2 id="zend.gdata.docs.queries">
        <title>Searching the documents feed</title>
        <para>
            You can search the Document List using some of the <ulink
            url="http://code.google.com/apis/gdata/reference.html#Queries">standard
            Google Data API query parameters</ulink>. Categories are used to 
            restrict the 
            type of document (word processor document, spreadsheet) returned.
            The full-text query string is used to search the content of all 
            the documents. More detailed information on parameters specific 
            to the Documents List can be found in the <ulink 
            url="http://code.google.com/apis/documents/reference.html#Parameters">Documents List Data API Reference Guide</ulink>.
        </para>
    
        <sect3 id="zend.gdata.docs.listwpdocuments">
            <title>Get a List of Word Processing Documents</title>
            <para>
                You can also request a feed containing all of your documents of a specific type. For example, to see a list of your work processing documents, you would perform a category query as follows.
            </para>
    
            <programlisting role="php"><![CDATA[<?php
$feed = $docs->getDocumentListFeed(
    'http://docs.google.com/feeds/documents/private/full/-/document');]]>
            </programlisting>
        </sect3>

        <sect3 id="zend.gdata.docs.listspreadsheets">
            <title>Get a List of Spreadsheets</title>
            <para>
                To request a list of your Google Spreadsheets, use the following category query:
            </para>

            <programlisting role="php"><![CDATA[<?php
$feed = $docs->getDocumentListFeed(
    'http://docs.google.com/feeds/documents/private/full/-/spreadsheet');]]>
            </programlisting>
        </sect3>

        <sect3 id="zend.gdata.docs.textquery">
            <title>Performing a text query</title>
            <para>
                You can search the content of documents by using a
                <code>Zend_Gdata_Docs_Query</code> in your request. A Query object
                can be used to construct the query URI, with the search term being
                passed in as a parameter. Here is an example method which queries
                the documents list for documents which contain the search string:
            </para>
            <programlisting role="php"><![CDATA[<?php
$docsQuery = new Zend_Gdata_Docs_Query();
$docsQuery->setQuery($query);
$feed = $client->getDocumentListFeed($docsQuery);]]>
            </programlisting>
        </sect3>

    </sect2>

</sect1>
