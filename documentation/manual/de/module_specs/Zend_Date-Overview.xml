<sect1 id="zend.date.overview">

    <title>Zend_Date API Overview</title>

    <para>
        While the <code>Zend_Date</code> API remains simplistic and unitary, its design remains flexible and powerful
        through the rich permutations of operations and operands.
    </para>

    <sect2 id="zend.date.values">

        <title>Working with Date Values</title>

        <para>
            Once input has been normalized via the creation of a <code>Zend_Date</code> object, it will have an
            associated timezone, but an internal representation using standard
            <ulink url="http://en.wikipedia.org/wiki/Unix_Time">UNIX timestamps</ulink>
            . All manipulations of these objects are assumed to be relative to this timezone. Beware of mixing and
            matching operations with date parts between date objects for different timezones, which generally produce
            undesireable results, unless the manipulations are only related to the timestamp. Operating on
            <code>Zend_Date</code> objects having different timezones generally works, since dates are normalized to
            UNIX timestamps on instantiation of <code>Zend_Date</code>.
        </para>

        <para>
            Most methods expect a constant selecting the desired <code>$part</code> of a date, such as
            <code>Zend_Date::HOUR</code>. These constants are valid for all of the functions below. A list of all
            available constants is provided in
            <xref linkend="zend.date.constants.list" />
            . If no <code>$part</code> is specified, then <code>Zend_Date::TIMESTAMP</code> is assumed.
        </para>

        <para>
            If the optional <code>$locale</code> parameter is provided, then the <code>$locale</code> disambiguates the
            <code>$date</code> operand by replacing month and weekday names for string <code>$date</code> operands, and
            even parsing date strings expressed according to the conventions of that locale (see
            <link linkend="zend.locale.date.normalize">Zend_Locale_Format::getDate()</link>
            ). The automatic normalization of localized <code>$date</code> operands of a string type occurs when
            <code>$part</code> is one of the <code>Zend_Date::DATE*</code> or <code>Zend_Date::TIME*</code> constants.
            The locale identifies which language should be used to parse month names and weekday names, if the
            <code>$date</code> is a string containing a date. If there is no <code>$date</code> input parameter, then
            the <code>$locale</code> parameter specifies the locale to use for localizing output (e.g. the date format
            for a string representation). Note that the <code>$date</code> input parameter might actually have a type
            name instead (e.g. <code>$hour</code> for <code>addHour()</code>), although that does not prevent the use of
            <code>Zend_Date</code> objects as arguments for that parameter. If no <code>$locale</code> was specified,
            then the locale of the current object is used to interpret <code>$date</code>, or select the localized
            format for output.
        </para>

    </sect2>

    <sect2 id="id.date.basic">

        <title>Basic <code>Zend_Date</code> Operations Common to Many Date Parts</title>

        <para>
            The methods <code>add(), sub(), compare(), get(), and set()</code> operate generically on dates. In each
            case, the operation is performed on the date held in the instance object. The <code>$date</code> operand is
            required for all of these methods, except <code>get()</code>, and may be a <code>Zend_Date</code> instance
            object, a numeric string, or an integer. These methods assume <code>$date</code> is a timestamp, if it is
            not an object. However, the <code>$part</code> operand controls which logical part of the two dates are
            operated on, allowing operations on parts of the object's date, such as year or minute, even when
            <code>$date</code> contains a long form date string, such as, "December 31, 2007 23:59:59". The result of
            the operation changes the date in the object, except for <code>compare()</code>, and <code>get()</code>.
        </para>

        <example>
            <title>Operating on Parts of Dates</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Date.php';

$date = new Zend_Date(); // $date's timestamp === time()

// changes $date by adding 12 hours
$date->add('12', Zend_Date::HOUR);
print $date;
?>]]></programlisting>
        </example>

        <para>
            Convenience methods exist for each combination of the basic operations above and several common date parts.
            Conveniently, they are named by combining a prefix (name of a basic operation) with a suffix (type of date
            part), such as <code>addYear()</code>. In the list below, all combinations of "Date Parts" and "Basic
            Operations" exist. For example, the operation "add" exists for each of these date parts, including
            <code>addDay()</code>, <code>addYear()</code>, etc.
        </para>

        <para>
            These convenience methods have the same equivalent functionality as the basic operation methods, but expect
            string and integer <code>$date</code> operands containing values representing the type indicated by the
            suffix of the convenience method. Thus, the names of these methods (e.g. "Year" or "Minute") identify the
            units of the <code>$date</code> operand.
        </para>

        <table>
            <title>Date Parts</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Date Part</entry>
                        <entry>Explanation</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Timestamp</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Unix_Time">UNIX timestamp</ulink>
                        </entry>
                    </row>
                    <row>
                        <entry>Year</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Gregorian_calendar">Gregorian calendar</ulink> year</entry>
                    </row>
                    <row>
                        <entry>Month</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Month#Julian_and_Gregorian_calendars">Gregorian calendar month (1-12, localized names supported)</ulink>
                        </entry>
                    </row>
                    <row>
                        <entry>Hour</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/24-hour_clock">24 hour clock</ulink> (0-23)</entry>
                    </row>
                    <row>
                        <entry>Minute</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Minute">minute</ulink> of the hour (0-59)</entry>
                    </row>
                    <row>
                        <entry>Second</entry>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Second">second</ulink> usually used to denote the elapsed seconds, since the start of the minute (0-59)</entry>
                    </row>
                    <row>
                        <entry>
                            <ulink url="http://en.wikipedia.org/wiki/Millisecond">millisecond</ulink>
                        </entry>
                        <entry>thousands of a second (0-999)</entry>
                    </row>
                    <row>
                        <entry>Day</entry>
                        <entry>
                            Zend_Date::DAY_SHORT is extracted from <code>$date</code> if the <code>$date</code> operand is an instance of <code>Zend_Date</code> or a numeric string.  Otherwise, an attempt is made to extract the day according to the conventions documented for these constants: Zend_Date::WEEKDAY_NARROW, Zend_Date::WEEKDAY_NAME, Zend_Date::WEEKDAY_SHORT, Zend_Date::WEEKDAY</entry>
                    </row>
                    <row>
                        <entry>Week</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Date</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Weekday</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>DayOfYear</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Arpa</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Iso</entry>
                        <entry></entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="strong">get($part = null, $locale = null)</emphasis>
                </para>
                <para>
                    returns the <code>$part</code> of object's date localized to <code>$locale</code> as a formatted
                    string or integer
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">set($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    sets the <code>$part</code> of the current object to the corresponding value for that part found in
                    the input <code>$date</code> having a locale <code>$locale</code>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">add($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    adds the <code>$part</code> of <code>$date</code> having a locale <code>$locale</code> to t the
                    current object's date
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">sub($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    subtracts the <code>$part</code> of <code>$date</code> having a locale <code>$locale</code> to t the
                    current object's date
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">copyPart($part, $locale = null)</emphasis>
                </para>
                <para>
                    returns a cloned object, with only <code>$part</code> of the object's date copied to the clone, with
                    the clone have its locale arbitrarily set to <code>$locale</code> (if specified)
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">compare($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    compares <code>$part</code> of <code>$date</code> to this object's timestamp, returning 0 if they
                    are equal, 1 if this object's part was more recent than $date's part, otherwise -1.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            The following basic operations do not have corresponding convenience methods for the data parts listed
            above:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="strong">equals($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    returns true, if <code>$part</code> of <code>$date</code> having locale <code>$locale</code> is the
                    same as this object's date <code>$part</code>, otherwise false
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">isEarlier($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    returns true, if <code>$part</code> of this object's date is earlier than <code>$part</code> of
                    <code>$date</code> having a locale <code>$locale</code>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">isLater($date, $part = null, $locale = null)</emphasis>
                </para>
                <para>
                    returns true, if <code>$part</code> of this object's date is later than <code>$part</code> of
                    <code>$date</code> having a locale <code>$locale</code>
                </para>
            </listitem>
        </itemizedlist>

    </sect2>

    <sect2 id="zend.date.overview.detail">

        <title>Date Part Specific Methods</title>

        <para>
            These convenience methods help us lazy programmers avoid having to type out the
            <link linkend="zend.date.constants.list">date part constants</link>
            when using the general methods above. The following date-part-specific methods are available:
        </para>

        <table>
            <title>Detailed functions</title>
            <tgroup cols="6">
                <thead>
                    <row>
                        <entry>Related</entry>
                        <entry>Output</entry>
                        <entry>Setting</entry>
                        <entry>Addition</entry>
                        <entry>Subtraction</entry>
                        <entry>Comparation</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            Unix Timestamp
                        </entry>
                        <entry>
                            getTimestamp()
                        </entry>
                        <entry>
                            setTimestamp()
                        </entry>
                        <entry>
                            addTimestamp()
                        </entry>
                        <entry>
                            subTimestamp()
                        </entry>
                        <entry>
                            compareTimestamp()
                        </entry>
                    </row>
                    <row>
                        <entry>
                            Date
                        </entry>
                        <entry>
                            getDate()
                        </entry>
                        <entry>
                            setDate()
                        </entry>
                        <entry>
                            addDate()
                        </entry>
                        <entry>
                            subDate()
                        </entry>
                        <entry>
                            compareDate()
                        </entry>
                    </row>
                    <row>
                        <entry>
                            Time
                        </entry>
                        <entry>
                            getTime()
                        </entry>
                        <entry>
                            setTime()
                        </entry>
                        <entry>
                            addTime()
                        </entry>
                        <entry>
                            subTime()
                        </entry>
                        <entry>
                            compareTime()
                        </entry>
                    </row>
                    <row>
                        <entry>
                            Year
                        </entry>
                        <entry>
                            getYear()
                        </entry>
                        <entry>
                            setYear()
                        </entry>
                        <entry>
                            addYear()
                        </entry>
                        <entry>
                            subYear()
                        </entry>
                        <entry>
                            compareYear()
                        </entry>
                    </row>
                    <row>
                        <entry>
Month
                        </entry>
                        <entry>
getMonth()
                        </entry>
                        <entry>
setMonth()
                        </entry>
                        <entry>
addMonth()
                        </entry>
                        <entry>
subMonth()
                        </entry>
                        <entry>
compareMonth()
                        </entry>
                    </row>
                    <row>
                        <entry>
Day
                        </entry>
                        <entry>
getDay()
                        </entry>
                        <entry>
setDay()
                        </entry>
                        <entry>
addDay()
                        </entry>
                        <entry>
subDay()
                        </entry>
                        <entry>
compareDay()
                        </entry>
                    </row>
                    <row>
                        <entry>
Weekday
                        </entry>
                        <entry>
getWeekday()
                        </entry>
                        <entry>
setWeekday()
                        </entry>
                        <entry>
addWeekday()
                        </entry>
                        <entry>
subWeekday()
                        </entry>
                        <entry>
compareWeekday()
                        </entry>
                    </row>
                    <row>
                        <entry>
Day of Year
                        </entry>
                        <entry>
getDayOfYear()
                        </entry>
                        <entry>
setDayOfYear()
                        </entry>
                        <entry>
addDayOfYear()
                        </entry>
                        <entry>
subDayOfYear()
                        </entry>
                        <entry>
compareDayOfYear()
                        </entry>
                    </row>
                    <row>
                        <entry>
Hour
                        </entry>
                        <entry>
getHour()
                        </entry>
                        <entry>
setHour()
                        </entry>
                        <entry>
addHour()
                        </entry>
                        <entry>
subHour()
                        </entry>
                        <entry>
compareHour()
                        </entry>
                    </row>
                    <row>
                        <entry>
Minute
                        </entry>
                        <entry>
getMinute()
                        </entry>
                        <entry>
setMinute()
                        </entry>
                        <entry>
addMinute()
                        </entry>
                        <entry>
subMinute()
                        </entry>
                        <entry>
compareMinute()
                        </entry>
                    </row>
                    <row>
                        <entry>
Second
                        </entry>
                        <entry>
getSecond()
                        </entry>
                        <entry>
setSecond()
                        </entry>
                        <entry>
addSecond()
                        </entry>
                        <entry>
subSecond()
                        </entry>
                        <entry>
compareSecond()
                        </entry>
                    </row>
                    <row>
                        <entry>
Millisecond
                        </entry>
                        <entry>
getMilliSecond()
                        </entry>
                        <entry>
setMilliSecond()
                        </entry>
                        <entry>
addMilliSecond()
                        </entry>
                        <entry>
subMilliSecond()
                        </entry>
                        <entry>
compareMilliSecond()
                        </entry>
                    </row>
                    <row>
                        <entry>
Week
                        </entry>
                        <entry>
getWeek()
                        </entry>
                        <entry>
setWeek()
                        </entry>
                        <entry>
addWeek()
                        </entry>
                        <entry>
subWeek()
                        </entry>
                        <entry>
compareWeek()
                        </entry>
                    </row>
                    <row>
                        <entry>
ISO 8601 date
                        </entry>
                        <entry>
getIso()
                        </entry>
                        <entry>
setIso()
                        </entry>
                        <entry>
addIso()
                        </entry>
                        <entry>
subIso()
                        </entry>
                        <entry>
compareIso()
                        </entry>
                    </row>
                    <row>
                        <entry>
Arpa date
                        </entry>
                        <entry>
getArpa()
                        </entry>
                        <entry>
setArpa()
                        </entry>
                        <entry>
addArpa()
                        </entry>
                        <entry>
subArpa()
                        </entry>
                        <entry>
compareArpa()
                        </entry>
                    </row>
                    <row>
                        <entry>
TimeZone
                        </entry>
                        <entry>
getTimeZone()
                        </entry>
                        <entry>
setTimeZone()
                        </entry>
                        <entry></entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

    </sect2>

    <sect2 id="zend.date.overview.others">

        <title>Additional Functions</title>

        <para>
            Certainly there are some additional functions not fitting into the above scheme while being helpful.
        </para>

        <para>
            The following additional functions are available:
        </para>

        <table>
            <title>Additional Functions</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Function</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <link linkend="zend.date.output.tostring">toString()</link>
                        </entry>
                        <entry>Is able to return a user-defined string</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.output.tovalue">toValue()</link>
                        </entry>
                        <entry>Converts a date to a digit</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.now">now()</link>
                        </entry>
                        <entry>Returns the current date</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.leapyear">isLeapYear()</link>
                        </entry>
                        <entry>Is the year a leap year?</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.today">isToday()</link>
                        </entry>
                        <entry>Is the date today?</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.today">isTomorrow()</link>
                        </entry>
                        <entry>Is the date tomorrow?</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.today">isYesterday()</link>
                        </entry>
                        <entry>is the date yesterday?</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.sun.rise">getSunRise()</link>
                        </entry>
                        <entry>Return the date's time of sunrise</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.sun.set">getSunSet()</link>
                        </entry>
                        <entry>Return the date's time of sunset</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.other.sun.info">getSunInfo()</link>
                        </entry>
                        <entry>Return an array with the date's sun dates</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.time.millisecond.getfrac">getFractionalPrecision()</link>
                        </entry>
                        <entry>Return the precision of the part seconds</entry>
                    </row>
                    <row>
                        <entry>
                            <link linkend="zend.date.time.millisecond.setfrac">setFractionalPrecision()</link>
                        </entry>
                        <entry>Set the precision of the part seconds</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
