<sect1 id="zend.controller.rewriterouter.rewritebase">
	<title>Basis URL und Unterverzeichnisse</title>

	<para>
	    Im Gegensatz zum ursprünglichen Route kann RewriteRouter auch in Unterverzeichnissen 
	    verwendet werden - deine Basis URL wird automatisch erkannt und entsprechend gesetzt. Zum 
	    Beispiel: wenn sich deine <code>index.php</code> in einem Unterverzeichnis mit Namen 
	    <code>/projects/myapp/index.php</code> befindet, wird die Rewrite Basis (die Basis URL) auf 
	    <code>/projects/myapp</code> gesetzt. Dieser String wird dann vom Anfang des Pfads entfernt,
	    bevor die Treffer für die Routen ermittelt werden. Dies befreit dich von der Notwendigkeit,
	    ihn jeder deiner Routen voranzustellen. Die Route <code>'user/:username'</code> passt auf
	    URLs wie <code>http://localhost/projects/myapp/user/martel</code> und 
	    <code>http://example.com/user/martel</code>.
	</para>

	<note>
	    <title>Groß- und Kleinschreibung</title>
	    <para>
    	    Die automatisches Rewrite Basis beachtet die Groß- und Kleinschreibung, stell also sicher,
	        dass deine URL auch auf den Namen eines Unterverzeichnis im Dateisystem passt (gilt sogar 
	        auf Windows Rechnern). Wenn es nicht passt, erhälst du eine noRoute Aktion.
	    </para>
	</note>

	<para>
	    Sollte die Rewrite Basis falsch erkannt werden, kannst du sie mit Hilfe der 
	    <code>setRewriteBase</code> Methode der <code>RewriteRouter</code> Klasse mit deinem eigenen 
	    Basispfad überschreiben.
	</para>

	<programlisting role="php"><![CDATA[
$router->setRewriteBase('/projects/myapp');]]></programlisting>

	<note>
	    <title>Achtung</title>
	    <para>
	        In den meisten Fällen wird dieser Schritt nicht notwendig sein und es wird davon abgeraten,
	        da es eine weitere Konfigurationsvariable einführt, die geändert werden muss, wenn man den
	        Code in eine andere Verzeichniskonfiguration verschiebt.
    	</para>
	</note>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->