<sect1 id="zend.controller.getting-started">
	<title>Erste Schritte</title>
	
	<sect2 id="zend.controller.getting-started.introduction">
		<title>Einführung</title>
		<para>
			Das <code>Zend_Controller</code> System wurde im Sinne der Erweiterungsmöglichkeiten 
			entwickelt, entweder durch Erstellen von Subklassen, welche die bestehenden Klassen 
			erweitern, oder durch Erstellen neuer Klassen, welche die verschiedenen Interfaces 
			und abstrakten Klassen implementieren, welche das Fundament der Controller 
			Klassenfamilie bilden.
		</para>
	</sect2>
	
	<sect2 id="zend.controller.getting-started.server-configuration">
		<title>Server Konfiguration</title>
		<para>
			Zend_Controller wurde entwickelt, um moderne Website mit sauberen URIs (wenige oder gar
			keine Abfrage Parameter) zu unterstützen. Deshalb benötigt die vorgeschlagene 
			Konfiguration für den Webserver eine Unterstützung in Form von URI Rewriting, um alle 
			Anfragen auf eine einzelne Datei ("index.php") umzuleiten, die lediglich 
			<code>Zend_Controller_Front</code> lädt. Auf dem Apache Webserver wird dies durch das 
			optionale Modul mod_rewrite erledigt.
		</para>

		<para>
            Der erste Schritt beim Konfigurieren des Servers ist, mod_rewrite erfolgreich zu 
            installieren und zu aktivieren. Der nächste Schritt ist das Anlegen zweier Dateien 
            im Hauptverzeichnis: .htaccess und index.php. Die .htaccess Datei wird von Apache 
            verwendet und muss eine Regel für mod_rewrite enthalten, um alle Anfragen auf die 
            index.php Datei umzuleiten. Für Entwicklungszwecke ist es oft am einfachsten, eine 
            Regel für mod_rewrite zu schreiben, welche alle Anfragen auf index.php umleitet mit 
            Ausnahme von bestimmten Dateiendungen. Hier ist ein Beispiel einer solchen Datei:
		</para>

			<programlisting role="php"><![CDATA[
RewriteEngine on
RewriteRule !\.(js|ico|gif|jpg|png|css)$ index.php
]]></programlisting>

		<para>
			Im obigen Beispiel werden alle Anfragen, die keine der genannten Dateiendungen 
			enthalten, an index.php weitergeleitet. Dies ist nützlich für die Entwicklung, 
			allerdings sollten diese Regeln in der Produktionsumgebung so geändert werden, dass 
			stattdessen Verzeichnise ausgeschlossen werden. 
		</para>

		<note>	
		    <title>Ort der Ladedatei</title>
		    <para>
    			Die Ladedatei sollte die einzige PHP Datei sein, die im Hauptverzeichnis abgelegt ist.
            </para>
		</note>

        <para>
            That said, the basic functionality of Zend_Controller also supports
            URLs using query parameters -- as an example,
            <code>index.php?controller=foo&amp;action=bar</code>. Additionally,
            another shipped router, <code>Zend_Controller_RewriteRouter</code>,
            works in a variety of environments, including many without
            mod_rewrite-like capabilities. If you cannot use mod_rewrite or an
            equivalent, you'll still be able to use Zend_Controller for your
            site.
        </para>
        
	</sect2>
	
	<sect2 id="zend.controller.getting-started.bootstrap">
		<title>Ladedatei</title>
		
		<para>
		    Nach dem Aufsetzen der .htaccess Datei wird eine neue Datei mit Namen 
		    <code>index.php</code> erstellt. Dies ist eine Ladedatei (englisch bootstrap file).
		    Der Zweck der index.php Datei ist nur, Zend_Controller_Front zu laden, dessen Datei
		    idealerweise außerhalb des Hauptverzeichnisses liegt.
		</para>

		<note>	
		    <para>
    			Die Ladedatei sollte die einzige PHP Datei sein, die im Hauptverzeichnis abgelegt ist.
            </para>
		</note>

		<para>
		    Aus Sicherheitsgründen empfiehlt Zend sehr stark, keine PHP Dateien in Verzeichnissen
		    abzulegen, die vom Webserver aus erreichbar sind (solche, die unterhalb des 
		    Hauptverzeichnis liegen). Während dies nicht in jeder Umgebung möglich ist, z.B. beim
		    Shared Hosting, sollte dies als optimales Verfahren (best practice) betrachtet und 
		    befolgt werden, wenn immer es möglich ist. 
		</para>

		<para>
		    Erstelle eine Ladedatei <code>index.php</code> im Hauptverzeichnis, um 
		    Zend_Controller_Front zu laden:
		</para>

			<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Front.php';

Zend_Controller_Front::run('/path/to/your/controllers');

?>]]></programlisting>

		<para>
			Siehe den nächsten Abschnitt bezüglich der Pfadangaben <code>/path/to/your/controllers</code>.
            
            Wie in der <code>README.txt</code> Datei angewiesen, sollte das Verzeichnis der Zend 
            Framework Bibliothek im <code>include_path</code> enthalten sein. Wenn dies nicht in 
            der <code>php.ini</code> Datei gesetzt wird, kann in der <code>index.php</code> Datei 
            die Funktion <code>set_include_path()</code> vor der Anweisung <code>require_once()</code> 
            aufgerufen werden. 
		</para>
	</sect2>	
		
	<sect2 id="zend.controller.getting-started.directory-structure">
		<title>Verzeichnisstruktur</title>
		
		<para>
		    Für Websites, die auf dem Zend Framework aufsetzen, wird die Verwendung einer gemeinsamen 
		    Verzeichnisstruktur empfohlen. Während dies nicht in jedem Fall möglich ist, sollte es
		    in vielen, vielleicht in den meisten Fällen so sein. Die Entscheidung, diese 
		    Struktur zu übernehmen, macht deinen Code für jemanden leichter verständlich, der mit 
		    den Konventionen des Zend Frameworks vertraut ist.  
		</para>
		
		<para>
		    Die vorgeschlagene Verzeichnisstruktur besteht aus dem Verzeichnis für Bibliotheken
		    (von Zend oder anderen) und dem Verzeichnis für die Applikation. 
		</para>

			<programlisting role="php"><![CDATA[
/application
  /models
  /views
  /controllers
/document_root
  /images
  /styles
  .htaccess
  index.php
/library
  /Zend
]]></programlisting>
		
		<note>
		    <para>
    		    Dieser Abschnitt ist noch nicht fertig. Er ist in Bearbeitung und unterliegt laufenden 
	    	    Änderungen.
	    	</para>
		</note>
	</sect2>	
		
    <sect2 id="zend.controller.overview.defaultcontroller">
        <title>Default Controller</title>

		<para>
		    Jede Website muss einen Default Controller definieren.
		    Dies ist der Controller, der aufgerufen wird, wenn kein Controller in der URI 
		    angegeben ist, wie z.B. in dieser URI:
		</para>

			<programlisting role="php"><![CDATA[
http://framework.zend.com/
]]></programlisting>

        <para>
            In the shipped configuration, the default controller should be named
            <code>IndexController</code>, and defined in a file named
            <code>IndexController.php</code>. Internally, it will be referenced
            as the controller 'index'.
        </para>

        <para>
            You may change the default controller prior to dispatching the front
            controller by calling the <code>setDefaultController()</code> method
            on either the front controller or dispatcher object. When doing so,
            use the internal naming conventions. Thus, the class
            <code>HomeController</code> (in the <code>HomeController.php</code>
            file) would be referred to as <code>home</code>.
        </para>

        <para>
            Controllers should extend the <code>Zend_Controller_Action</code>
            class and be placed in the controllers directory.
        </para>

		<programlisting role="php"><![CDATA[<?php
				
require_once 'Zend/Controller/Action.php';

class IndexController extends Zend_Controller_Action 
{
	public function indexAction()
	{
		echo 'Hello from IndexController';
	}

	public function noRouteAction()
	{
		$this->_redirect('/');
	}
}

?>]]></programlisting>
			
        <para>
            More detail on the default controller and action, as well as writing
            action controller classes, will be presented in later chapters.
        </para>

    	<note>
		    <para>
    		    Dieser Abschnitt ist noch nicht fertig. Er ist in Bearbeitung und unterliegt laufenden 
	    	    Änderungen.
	    	</para>
	    </note>			
	</sect2>			
</sect1>