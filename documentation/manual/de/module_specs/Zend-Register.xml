<sect1 id="zend.register">
    <title>Zend::register($index, $newval)</title>

    <para>
    	Registriert den Wert $newval mit dem Offset $index in der Registry.
    </para>

    <example>
        <title>register() / offsetSet() Beispiel</title>
<programlisting role="php"><![CDATA[<?php
Zend::register($index, $value);

// oder

$registry = Zend::registry();
$registry->offsetSet($index, $newval);

?>]]></programlisting>
    </example>

    <para>
	    Der Objektspeicher ist ein Mechanismus, um einmalige Instanzen von Werten im 
	    Applikationsspeicher zu erstellen (Singleton). Es wird immer die gleiche Instanz 
	    zurückgegeben, sowohl beim einmaligen Ablegen des Wertes in der Registry, als auch beim 
	    Zurückholen des Wertes aus der Registry, wann immer es erforderlich ist. 
    </para>

    <para>
	    Der <code>$index</code> ist ein beliebiger Index, um den Wert in der Registry zu 
	    bezeichnen. Der selbe Index kann an <code>Zend::registry()</code> übergeben werden, um den 
	    Wert zurückzuholen.
    </para>

    <para>
	    Die Semantik der Registry befolgt jene von <ulink
        url="http://www.php.net/~helly/php/ext/spl/classArrayObject.html">ArrayObject</ulink>.
        Diese Method umhüllt einfach die 
        <ulink url="http://www.php.net/manual/en/function.arrayobject-offsetset.php">
        offsetSet() Methode</ulink>.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->