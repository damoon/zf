<sect3 id="zend.controller.actionhelpers.autocomplete">
    <title>AutoComplete</title>

    <para>
        Viele AJAX Javascript Bibliotheken bieten Funktionalitäten an für eine automatische
        Vervollständigung wobei eine Auswahlliste von potentiell passenden Ergebnissen angezeigt
        wird wärend der Benutzer tippt. Der <code>AutoComplete</code> Helfer zielt darauf ab
        einfach akzeptierbare Ergebnisse zu solchen Methoden zurückzugeben.
    </para>

    <para>
        Da nicht alle JS Bibliotheken automatische Vervollständigung auf die gleiche Art
        implementieren bietet der <code>AutoComplete</code> Helfer einige grundsätzliche abstrakte
        Funktionalitäten zu vielen Bibliotheken und konkrete Implementierungen für individuelle
        Bibliotheken. Zurückgegebene Typen sind generell entweder JSON Arrays von Strings, JSON
        Arrays von Arrays (mit jedem Mitgliedsarray das ein assoziatives Array von Metadaten ist,
        das verwendet wird um die Auswahlliste zu erstellen), oder HTML.
    </para>

    <para>
        Die grundsätzliche Verwendung ist für jede Implementierung die selbe:
    </para>

        <programlisting role="php"><![CDATA[<?php
class FooController extends Zend_Controller_Action
{
    public function barAction()
    {
        // etwas Logik durchführen...

        // Verschlüsseln und Antwort senden;
        $this->_helper->autoCompleteDojo($data);

        // oder explizit:
        $response = $this->_helper->autoCompleteDojo->sendAutoCompletion($data);

        // oder einfach die Antwort der automatischen Vervollständigung vorbereiten;
        $response = $this->_helper->autoCompleteDojo->prepareAutoCompletion($data);
    }
}
?>]]></programlisting>

    <para>
        Standardmäßig mach die automatische Vervollständigung folgendes:
    </para>

    <itemizedlist>
        <listitem><para>
                Layouts und ViewRenderer ausschalten.
        </para></listitem>

        <listitem><para>
                Die richtigen Antwort Header zu setzen.
        </para></listitem>

        <listitem><para>
                Antwort Body mit verschlüsselten/formatierten automatisch vervollständigten Daten
                setzen.
        </para></listitem>

        <listitem><para>
                Antwort senden.
        </para></listitem>
    </itemizedlist>

    <para>
        Mögliche Methoden des Helfers beinhalten:
    </para>

    <itemizedlist>
        <listitem><para>
                <code>disableLayouts()</code> kann verwendet werden um Layouts und den ViewRenderer
                auszuschalten. Typischerweise wird das innerhalb von
                <code>prepareAutoCompletion()</code> aufgerufen.
        </para></listitem>

        <listitem><para>
                <code>encodeJson($data, $keepLayouts = false)</code> verschlüsselt Daten zu JSON,
                und aktiviert oder deaktiviert Layouts optional. Typischerweise wird das innerhalb
                von <code>prepareAutoCompletion()</code> aufgerufen.
        </para></listitem>

        <listitem><para>
                <code>prepareAutoCompletion($data, $keepLayouts = false)</code> wird verwendet um
                Daten im Antwortformat vorzubereiten wenn das für die konkrete Implementation
                notwendig ist, wobei Layouts optional aktiviert oder deaktiviert werden können.
                Der Rückgabewert variiert basierend auf der Implementierung.
        </para></listitem>

        <listitem><para>
                <code>sendAutoCompletion($data, $keepLayouts = false)</code> wird verwendet um
                Daten im Antwortformat zu senden was für die konkrete Implementierung notendig ist.
                Sie ruft <code>prepareAutoCompletion()</code> und sendet dann die Antwort.
        </para></listitem>

        <listitem><para>
                <code>direct($data, $sendNow = true, $keepLayouts = false)</code> wird verwendet
                wenn der Helfer als Methode des Helfer Brokers aufgerufen wird. Das
                <code>$sendNow</code> Flag wird verwendet um festzustellen ob
                <code>sendAutoCompletion()</code> oder <code>prepareAutoCompletion()</code>
                aufgerufen werden muß.
        </para></listitem>
    </itemizedlist>

    <para>
        Aktuell unterstützt <code>AutoComplete</code> die folgenden AJAX Bibliotheken:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <ulink url="http://dojotoolkit.org/">Dojo</ulink>. Dojo selbst unterstützt aktuell
                keine offizielle automatische Vervollständigung, aber
                <ulink url="http://today.java.net/pub/a/today/2006/04/27/building-ajax-with-dojo-and-json.html">
                Java.net zeigt eine Lösung</ulink> die typischerweise referenziert wird wenn
                automatische Vervollständigung mit Dojo durchgeführt werden soll. Es wird eine
                JSON Antwort erwartet die ein Array von Strings enthält.
            </para>

            <para>
                Der mit dieser Bibliothek zu verwendende Helfer ist 'AutoCompleteDojo'.
            </para>
        </listitem>

        <listitem>
            <para>
                <ulink url="http://wiki.script.aculo.us/scriptaculous/show/Ajax.Autocompleter">Scriptaculous</ulink>.
                Script.aculo.us erwartet eine HTML Antwort in einem speziellen Format.
            </para>

            <para>
                Der mit dieser Bibliothek zu verwendende Helfer ist 'AutoCompleteScriptaculous'.
            </para>
        </listitem>
    </itemizedlist>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
