<sect1 id="zend.server.reflection">
    <title>Zend_Server_Reflection</title>

    <sect2 id="zend.server.reflection.introduction">
        <title>Einführung</title>

        <para>
            Zend_Server_Reflection stellt einen Standardmechanismus für Funktion und Klassen 
            Introspektion für die Verwendung der Serverklassen bereit. Es basiert auf der PHP 5
            Reflection API und erweitert es, um Methoden für die Erhaltung von Parameter und
            Rückgabewerttypen und Beschreibung, eine komplette Liste mit Funktion und Methoden 
            Prototypen (d.h. alle möglichen, gültigen Aufrufkombinationen) sowie Funktions- und
            Methodenbeschreibungen bereit zu stellen
        </para>
        <para>
            Normalerweise wird diese Funktionalität nur von Entwicklern von Serverklassen für das
            Framework verwendet.
        </para>
    </sect2>
    <sect2 id="zend.server.reflection.usage">
        <title>Verwendung</title>

        <para>
            Die grundlegende Verwendung ist einfach:
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Server/Reflection.php';
$class    = Zend_Server_Reflection::reflectClass('My_Class');
$function = Zend_Server_Reflection::reflectFunction('my_function');

// Erhalte Prototypen
$prototypes = $reflection->getPrototypes();

// Erhalte Prototyp Rückgabetyp
$prototype->getReturnType();

// Erhalte Prototyp Parameter
$prototype->getParameters();

// Erhalte Parameter Typ
$parameter->getType();

// Erhalte Namensraum für eine Klasse, Funktion oder Methode.
// Namensräume können zum Zeitpunkt der Instanzierung gesetzt werden (zweites Argument) oder durch
// Verwendung von setNamespace()
$reflection->getNamespace();
]]></programlisting>

        <para>
            <code>reflectFunction()</code> gibt ein  <code>Zend_Server_Reflection_Function</code> 
            Objekt zurück; <code>reflectClass</code> gibt ein <code>Zend_Server_Reflection_Class</code> 
            Objekt zurück. Bitte die API Documentation beachten, um zu erfahren, welche Methoden
            für beide Klassen verfügbar sind.
        </para>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
