<sect1 id="zend.log.introduction">
    <title>Einführung</title>
    <para>
        <code>Zend_Log</code> ist eine Protokollierungsklasse für allgemeine Zwecke. 
        <code>Zend_Log</code> ist eine statische Klasse, die nicht direkt instanziiert werden kann.
        Sie enthält ein Array mit Instanzen von <code>Zend_Log</code>, eine für jedes Protokoll,
        das von der Anwendung verwendet wird. Jede Protokollinstant verwendet einen Adapter, der 
        <code>Zend_Log_Adapter_Interface</code> implementiert.
    </para>

    <para>
        Um <code>Zend_Log</code> zu verwenden, inkludiere die <code>Zend_Log</code> Klasse und jede
        Adapterklasse, die verwendet werden soll, mittels <ulink url="http://php.net/include">include()</ulink>.
        Wenn eine Anwendung zum Beispiel sowohl in die Konsole (den Ausgabepuffer von PHP) als auch
        an Textdateien protokollieren soll, würden folgende Dateien inkludiert werden:

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                  // Zend_Log Basisklasse
require_once 'Zend/Log/Adapter/Console.php';  // Protokolladapter für die Konsole
require_once 'Zend/Log/Adapter/File.php';     // Protokolladapter für Dateien
]]></programlisting>

        <code>Zend_Log</code> kann für ein einzelnes Log auch in vereinfachter Weise, für mehrfache 
        Protokolle und auch für das interne Protokollieren von Abläufen in vielen Zend Framework 
        Klassen verwendet werden. 
    </para>
</sect1>

<sect1 id="zend.log.simple-logging">
    <title>Protokollieren in einem einzigen Log</title>
    <para>
        Ein Protokoll wird durch den Aufruf der <code>Zend_Log::registerLogger()</code> Methode mit
        einer <code>Zend_Log_Adapter_Interface</code> Instanz als Argument erstellt.

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                // Zend_Log Basisklasse
require_once 'Zend/Log/Adapter/File.php';   // Protokolladapter für Dateien

// Dateiprotokoll registrieren
Zend_Log::registerLogger(new Zend_Log_Adapter_File('/logs/simple.txt'));
]]></programlisting>
    </para>

    <para>
        Nachrichten werden an das Protokoll dann mit <code>Zend_Log::log()</code> gesendet. 

        <programlisting role="php"><![CDATA[
/**
 * Sende eine Nachricht an das Protokoll. Ein optionales zweites Argument gibt die Protokollstufe
 * an. Wenn keine Protokollstufe angegeben wird, wird LEVEL_DEBUG angenommen.
 */
Zend_Log::log('Erste Protokollnachricht.');

/**
 * Protokolliere eine schwerwiegende Nachricht.
 */
Zend_Log::log('Ein schwerer Fehler ist aufgetreten.', Zend_Log::LEVEL_SEVERE);
]]></programlisting>
    </para>
</sect1>

<sect1 id="zend.log.log-levels">
   <title>Protokollstufen</title>
   <para>
       <code>Zend_Log::log()</code> protokolliert alle Nachrichten als <code>LEVEL_DEBUG</code>,
       wenn keine andere Stufe als optionales zweites Argument übergeben wird. Die folgenden Stufen
       sind als Konstanten der <code>Zend_Log</code> Klasse verfügbar. 

       <programlisting role="php"><![CDATA[
LEVEL_DEBUG     = 1
LEVEL_WARNING   = 4
LEVEL_ERROR     = 8
LEVEL_SEVERE    = 16
]]></programlisting>
   </para>
</sect1>

<sect1 id="zend.log.advanced-logging">
   <title>Fortgeschrittenes Protokollieren: Mehrfache Protokolle</title>
   <para>
        <code>Zend_Log</code> unterstützt das Protokollieren an mehrfache Protokolladapter. Es kann 
        entweder eine Nachricht an alle Protokolle oder an ein spezifisches Protokoll senden.
   </para>

   <para>
        Beim Erstellen von mehreren Protokollen muss für jedes Protokoll ein einzigartiger Name
        vergeben werden. Protokolle werden mit der <code>registerLogger()</code> Methode bei Angabe
        des Protokollnamens als optionaler zweiter Parameter registriert.
   </para>

   <para>
        Im Beispiel unten werden zwei Protokolle erstellt: eines für die Konsole und eines für eine
        Datei. Sie erhalten die entsprechenden Namen <code>Konsole</code> und <code>Datei</code>.

        <programlisting role="php"><![CDATA[
require_once 'Zend/Log.php';                 // Zend_Log Basisklasse
require_once 'Zend/Log/Adapter/File.php';    // Protokolladapter für die Konsole
require_once 'Zend/Log/Adapter/Console.php'; // Protokolladapter für Dateien

Zend_Log::registerLogger(new Zend_Log_Adapter_File('/logs/framework.txt'), 'Datei');
Zend_Log::registerLogger(new Zend_Log_Adapter_Console(), 'Konsole');
]]></programlisting>
   </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->