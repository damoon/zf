<sect1 id="zend.controller.rewriterouter.rewritebase">
	<title>الـ URL الأساسى و المجلدات الفرعية</title>

	<para>
على عكس الـ router السابق, RewriteRouter يمكن إستخدامه فى المجلدات الفرعية, حيث سيقوم تلقائياً بمعرفة 
الـ URL ألأساسى الذى سيتم إستخدامه. على سبيل المثال , إن كنت تضع ملف index.php خاصتك فى مجلد فرعى 
على webserver بهذا المسار <code>projects/myapp/index.php/</code>, سيتم وضع قيمة الـ URL الأساسى 
ليكون <code>projects/myapp/</code>, هذا المسار سيتم تجاهله لاحقاً من بداية المسار عند حدوث عملية مقارنة 
بالـ route , و هذا يريحك من عملية إضافة هذا المسار إلى الـ routes خاصتك, فإذا كان لديك route مثل 
<code>'user/:username'</code> , فسيتوافق مع URLs مثل 
<code>http://localhost/projects/myapp/user/martel</code> و 
<code>http://example.com/user/martel</code>.
	</para>

	<note>
        عملية توقع قيمة الـ URL الأساسى تعتبر حساسة لحالة الحروف, لذلك تأكد من أن الـ URL سيتطابق مع أسم 
        مجلد فرعى لديك (حتى على أنظمة windows). إذا لم تتطابق سيستدعى الـ action المسمى noRoute.
	</note>

	<para>
        إن لم يتم توقع الـ URL الأساسى بشكل صحيح , فيمكنك وضع القيمة الصحيحة التى تراها بإستخدام الـ method المسمى 
        setRewriteBase فى RewriteRouter :
	</para>

	<programlisting role="php"><![CDATA[
$router->setRewriteBase('/projects/myapp');]]></programlisting>

	<note>
        هذه الخطوة لن تحتاج إليها فى اغلب الحالات , و ينصح بعدم إستخدامها إلا فى الضرورة القصوى لأن هذا سيترتب 
        عليه مشاكل عند نقل برنامجك من مكان إلى أخر و ستحتاج تغير القيمة هذه من جديد .
	</note>

</sect1>

<!--
vim:se ts=4 sw=4 et:
-->