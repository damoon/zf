<sect1 id="zend.register">

    <title>(Zend::register($index, $newval</title>

    <para>
        يسجل القيمة newval$ فى العنصر index$ داخل الـ registry.
    </para>

    <example>
        <title>register() / offsetSet() Example</title>
<programlisting role="php"><![CDATA[<?php
Zend::register($index, $value);

// or

$registry = Zend::registry();
$registry->offsetSet($index, $newval);

?>]]></programlisting>
    </example>

    <para>
        الـ registry هى وسيلة لتوفير نسخة موحدة من قيمة ما على نطاق التطبيق بالكامل.
        عن طريق حفظ القيمة فى الـ registry مرة واحدة, و ثم إسترجاع هذه القيمة من 
        الـ registry كلما ظهرت حاجة لذلك, سترجع نفس النسخة دائماً.
    </para>

    <para>
        الـ <code>index$</code> هو مُعرٍف اختيارى لتسمية القيمة فى الـ registry,
        و نفس الإسم يمكن تمريره إلى 
        <code>()Zend::registry</code> لإسترجاع القيمة المخزنة.
    </para>

    <para>
        صيغ إستخدام الـ registry تعود إلى هؤلاء من
        <ulink
        url="http://www.php.net/~helly/php/ext/spl/classArrayObject.html">ArrayObject</ulink>
        . هذا الـ method ببساطة يغلف الـ method المسمى 
        <ulink url="http://www.php.net/manual/en/function.arrayobject-offsetset.php">
        ()offsetSet</ulink>
        .
    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
