<sect1 id="zend.initregistry">

    <title>(Zend::initRegistry($registry = 'Zend_Registry'</title>

    <para>
        المطورون الذين يرديون الأضافة إلى امكانيات الـ registry , يمكنهم إستخدام هذه الدالة.
        هذا الـ method يسمح للمطورين بأن يورثوا من Zend_Registry, يشمل 
        إضافة methods بديلة لـ ()offsetGet و ()offsetExists, مثل ()has و ()getval و ()setval .. إلخ.,
        عن طريق إنشاء نسخة من Zend_Registry subclass فى كود الـ bootstrap, ثم بعدها تمرير هذه النسخة 
        إلى ()initRegistry, قبل أن يتم إستخدام أى methods لها علاقة بالـ registry. لاحظ أن ()intiRegistry
        يمكن إستخدامها مرة واحدة, و ذلك لتفادى مسح محتويات الـ registry بالخطأ بعد الـ initialization.
        ايضاً, بإستخدام <code>()Zend::registry</code> or <code>()Zend::register</code> يتم إستدعاء 
        <code>()Zend::initRegistry</code> تلقائياً, إن لم يكن تم إستدعائه من قبل.
    </para>

    <example>
        <title>register() / offsetSet() Example</title>
<programlisting role="php"><![CDATA[<?php
class Zend_RegistryMine extends Zend_Registry
{
    public function getval($index)
    {
        return $this->offsetGet($index);
    }
}

# in your bootstrap code:

$ini_array = parse_ini_file('your_stuff.ini'); // purely optional
$registry = new Zend_RegistryMine($ini_array);
Zend::initRegistry($registry);

# now the normal ()Zend::registry, ()Zend::register, and ()Zend::isRegistered work as expected
?>]]></programlisting>
    </example>

    <para>
        إستخدم الـ constant المسمى <code>ArrayObject::ARRAY_AS_PROPS</code> 
        فى الـ constractor لتسمح بالوصول إلى القيم 
        بإستخدام <code>registry->$indexName$</code>, بالإضافة إلى 
        <code>registry[$indexName]$</code>.
        مع ذلك, إنتبه إلى التضارب بين الأسماء, إن كنت تستخدم class يرث من Zend_Registry و
        قد اضفت إليه private variables.
    </para>

    <example>
        <title>الوصول إلى القيم بإستخدام الصيغة الكائنية بدلا من صيغة الـ ArrayAccess</title>
<programlisting role="php"><![CDATA[<?php
$registry = new Zend_Registry(array(), ArrayObject::ARRAY_AS_PROPS); 
Zend::initRegistry($registry);
?>]]></programlisting>
    </example>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
