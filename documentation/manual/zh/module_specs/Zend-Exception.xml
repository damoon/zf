<sect1 id="zend.exception">
    <title>Zend::exception()</title>

    <para>Lazy loads an exception class, instantiates the exception, and returns it.
	延迟加载（lazy load）一个异常类，实例化并返回对象实例。
	</para>

    <programlisting role="php"><![CDATA[<?php

Zend::exception($class, $message, $code);

?>]]></programlisting>

    <para>  
	<code>$class</code>参数指定了要加载和实例化的异常类（这个类通过Zend::loadClass()来加载，见<xref linkend="zend.loadclass" />）。本参数的命名一定要遵循命名规则，类文件可以位于<code>include_path</code>指定的位置。
    </para>

    <para>        
		<code>$message</code> 和<code>$code</code>参数都是可选的，将作为参数传递给异常类的构造方法。
    </para>

    <para>
	如果加载成功，本方法会加载exception类，把<code>$message</code> 和<code>$code</code>参数传递给异常类的构造方法，然后创建一个实例并返回。如果无法加载类，或者该类不是<code>Exception</code>的子类，则抛出一个异常。
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
