<sect2 id="zend.service.amazon.query">
    <title>另一个可选的查询 API</title>
    <sect3 id="zend.service.amazon.query.introduction">
        <title>简介</title>
        <para>
            <code>Zend_Service_Amazon_Query</code> 为Amazon Web Service 提供另一个可选的查询 API. 这个API 使用Fluent Interface 模式.
			 就是说, 你可以使用一个方法链表来实现所有的调用.  (e.g., <code>$obj->method()->method2($arg)</code>)
        </para>
        <para>
            <code>Zend_Service_Amazon_Query</code> 用过载来简单的构建一个出版物查询，然后允许你基于指定的标准进行搜索. 
			用方法调用来提供每一个查询参数, 每个方法的参数对应那个查询参数的值：
        </para>
        <example>
            <title>Search Amazon Using the Alternative Query API</title>
            <para>
                在这个例子中, 使用新的查询 API 作为fluent interface来指定查询参数和值:
            </para>
            <programlisting><![CDATA[<?php
require_once 'Zend/Service/Amazon/Query.php';
$query = new Zend_Service_Amazon_Query('MY_API_KEY');
$query->Category('Books')->Keywords('PHP');
$results = $query->search();
foreach ($results as $result) {
    echo $result->Title .'<br />';
}
?>]]>       </programlisting>
            <para>
                它设定查询参数<code>Category</code> 为 "Books" ， <code>Keywords</code> 为 "PHP".
            </para>
            <para>
                关于查询参数的更多信息, 请参考
                <ulink
                    url="http://www.amazon.com/gp/aws/sdk/main.html/102-9041115-9057709?s=AWSEcommerceService&amp;v=2005-10-05&amp;p=ApiReference/ItemSearchOperation">relevant Amazon documentation</ulink>.
            </para>
        </example>
    </sect3>
</sect2>
<!--
vim:se ts=4 sw=4 et:
-->