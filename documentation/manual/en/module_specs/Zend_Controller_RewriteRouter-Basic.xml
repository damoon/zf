<sect1 id="zend.controller.rewriterouter.basic">
	<title>Basic Routes</title>

	<para>
		The heart of the RewriteRouter is the definition of user defined routes. Routes are created by calling the addRoute method of
		RewriteRouter:
	</para>

	<programlisting role="php"><![CDATA[
$router->addRoute('user', 'user/:username');]]></programlisting>

	<para>
		The first parameter is the name of the route. It is redundant at the moment of writing but will be used in the future in
		a URL view helper to allow for easy URL generation in your views. Should you need to make use of a previously
		configured named route, you can retrieve it with the getRoute method of the RewriteRouter.
	</para>

	<para>
		The second parameter is a route that will be matched to a URL - for example, the above route will match
		<code>http://example.com/user/martel</code>. The colon in a route marks a URL variable which will be accessible
		through a Zend_Controller_Action::_getParam method. In our example a parameter named username will be set to a value of
		'martel'.
	</para>

	<note>
		Routes are matched in reverse order so make sure your most generic routes are defined first.
	</note>

	<note>
		For now the current implementation allows for use of any characters except a slash (/) as a variable identifier but
		it is strongly recommended that one uses only php variable friendly characters. In future the implementation will probably be
		altered and this may introduce bugs to your code.
	</note>

	<para>
		There are two special variables which can be used in your routes - 'controller' and 'action'. These special
		variables will be used to find a controller and/or an action chosen in the URL. The 'action' variable 
		must always be defined either in the route or as a default parameter. The 'controller' variable will default 
		to the IndexController if it is not defined.
	</para>

	<programlisting role="php"><![CDATA[
$router->addRoute('user', ':controller/:action');]]></programlisting>

	<para>
		If you point your browser to 'http://example.com/news/latest' with this route defined the
		Zend_Controller_Dispatcher will invoke the latestAction of your NewsController.
	</para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->