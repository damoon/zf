<!-- $Id$ -->
<sect1 id="zend.filter.set">
    <title>Standard filter set</title>
    <para>
        The Zend Framework comes with a standard set of filters, which are ready for you to use.
    </para>

    <sect2 id="zend.filter.set.alnum">
        <title>Alnum</title>
        <para>
            Returns the string <code>$value</code>, removing all but alphabetic and digit characters.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.alpha">
        <title>Alpha</title>
        <para>
            Returns the string <code>$value</code>, removing all but alphabetic characters.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.basename">
        <title>BaseName</title>
        <para>
            Given a string containing a path to a file, this filter will return the base
            name of the file
        </para>
    </sect2>

    <sect2 id="zend.filter.set.digits">
        <title>Digits</title>
        <para>
            Returns the string <code>$value</code>, removing all but digit characters.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.dir">
        <title>Dir</title>
        <para>
            Returns directory name component of path.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.htmlentities">
        <title>HtmlEntities</title>
        <para>
            Returns the string $value, converting characters to their corresponding
            HTML entity equivalents where they exist.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.int">
        <title>Int</title>
        <para>
            Returns (int) $value
        </para>
    </sect2>

    <sect2 id="zend.filter.set.realpath">
        <title>RealPath</title>
        <para>
            Expands all symbolic links and resolves references to '/./', '/../' and extra '/'
            characters in the input path and return the canonicalized absolute pathname. The resulting
            path will have no symbolic link, '/./' or '/../' components.
        </para>
        <para>
            <code>Zend_Filter_RealPath</code> will return <code>FALSE</code>
            on failure, e.g. if the file does not exist. On BSD systems <code>Zend_Filter_RealPath</code>
            doesn't fail if only the last path component doesn't exist, while other systems will return
            <code>FALSE</code>.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.stringtolower">
        <title>StringToLower</title>
        <para>
            Returns the string <code>$value</code>, converting alphabetic characters to lowercase as necessary.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.stringtrim">
        <title>StringTrim</title>
        <para>
            Returns the string <code>$value</code> with characters stripped from the beginning and end.
        </para>
    </sect2>

    <sect2 id="zend.filter.set.striptags">
        <title>StripTags</title>
        <para>
            This filter tries to return a string with all HTML and PHP tags stripped from a given string.
        </para>
    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->