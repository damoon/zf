<sect1 id="zend.loadclass">
    <title>Zend::loadClass()</title>
    <para>
        <code>Zend::loadClass($class, $dirs)</code> は、
        PHP ファイルを読み込んで、クラスが存在するかどうかを確かめます。
    </para>

    <programlisting role="php"><![CDATA[<?php

Zend::loadClass('Container_Tree', array('/home/production/mylib', (/home/production/myapp')));

?>]]></programlisting>

    <para>
        まず <code>$class</code> をパス階層に変換します。
        つまり、アンダースコアをパス区切り文字に変換します。
        その後、この階層が <code>$dirs</code> の各要素の後に追加されます。
        <code>$dirs</code> が <code>null</code> の場合は、その結果はひとつの階層だけとなります。
        たとえば、<code>Container_Tree</code> は <code>Container/Tree.php</code> となります。
        <code>/home/production/mylib/Container/Tree.php</code> が存在した場合は、それを読み込みます。
        存在しなければ、次に <code>/home/production/myapp/Container/Tree.php</code>
        を探し、見つかった場合にそれを読み込みます。それでも見つからなかった場合は、
        PHP のインクルードパスから <code>Container/Tree.php</code> を探します。
    </para>

    <para>
        <code>$dirs</code> に文字列あるいは配列を指定すると、
        指定した順にそのディレクトリを探します。そして最初に見つかったファイルを読み込みます。

        ディレクトリ <code>$dirs</code> にファイルがみつからない場合は、PHP の include_path
        を用いて <code>include</code> 文で読み込みます (つまり <code>include 'Tree.php'</code>)
        となります。
    </para>

    <para>
        ファイルが見つからない場合、あるいは読み込んだファイルにクラスが存在しない場合は
        <code>Zend_Exception</code> をスローします。読み込みには
        <code>Zend::loadFile()</code> を使用するので、クラス名として指定できるのは
        英数字とハイフン ('-')、アンダースコア ('_') そしてピリオド ('.') だけです。
    </para>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->