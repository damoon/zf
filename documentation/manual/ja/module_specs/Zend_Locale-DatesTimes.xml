<sect1 id="zend.locale.date.datesandtimes">

    <title>日付および時刻の扱い</title>

    <para>
        <code>Zend_Locale_Format</code> では、日付や時刻を扱うためのメソッドを提供しています。
        これらを使用して、さまざまなロケールのさまざまな書式間での変換や正規化を行います。
        日付の操作には <code>Zend_Date</code> を使用します。
    </para>

    <sect2 id="zend.locale.date.normalize">

        <title>日付および時刻の正規化</title>

        <para>
            <code>getDate()</code> は、地域化された書式の日付を含む文字列をパースします。
            結果は構造化された配列で返されます。この配列のキーが、日付の各部分を表します。
            地域化された日付文字列が日付/時刻のすべての要素を含んでいるとは限らないので、
            配列のすべてのキーが存在するとは限りません。
            たとえば年月日のみが指定された場合は、時刻に関する情報は配列から取り除かれます。
            逆に時分秒のみが指定された場合も同様です。
            入力に日付や時刻が含まれない場合は、例外がスローされます。
        </para>

        <para>
            BCMath 拡張モジュールが有効な場合に、
            以下のような値が返されます。
            <table>
                <title>返り値</title>
                <tgroup cols='4'>
                    <thead>
                        <row>
                            <entry>配列のキー</entry>
                            <entry>返される値</entry>
                            <entry>最小値</entry>
                            <entry>最大値</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>day</entry>
                            <entry>integer</entry>
                            <entry>1</entry>
                            <entry>31</entry>
                        </row>
                        <row>
                            <entry>month</entry>
                            <entry>integer</entry>
                            <entry>1</entry>
                            <entry>12</entry>
                        </row>
                        <row>
                            <entry>year</entry>
                            <entry>integer</entry>
                            <entry>無制限</entry>
                            <entry>無制限</entry>
                        </row>
                        <row>
                            <entry>hour</entry>
                            <entry>integer</entry>
                            <entry>0</entry>
                            <entry>無制限</entry>
                        </row>
                        <row>
                            <entry>minute</entry>
                            <entry>integer</entry>
                            <entry>0</entry>
                            <entry>59</entry>
                        </row>
                        <row>
                            <entry>second</entry>
                            <entry>integer</entry>
                            <entry>0</entry>
                            <entry>59</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <example>
            <title>日付の正規化</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$date = Zend_Locale_Format::getDate('13.04.2006', 'dd.MM.yyyy');

print_r ($date);
?>]]></programlisting>
        </example>

        <para>
            <code>getDate()</code> は "ロケール対応" なので、
            <code>$locale</code> を指定することで
            そのロケールの書式の日付文字列を使用できます。
        </para>

        <example>
            <title>ロケールを指定した日付の正規化</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$locale = new Zend_Locale('de_AT');
$date = Zend_Locale_Format::getDate('13.04.2006', null, $locale);

print_r ($date);
?>]]></programlisting>
        </example>

        <para>
            入力に日付と時刻の両方が含まれている場合に、
            完全な日付と時刻が返されます。
        </para>

        <example>
            <title>日付と時刻の正規化</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$locale = new Zend_Locale('de_AT');
$date = Zend_Locale_Format::getDate('13.04.2005 22:14:55', false, $locale);

print_r ($date);
?>]]></programlisting>
        </example>

        <para>
            書式を指定したい場合は、
            <code>$locale</code> ではなく <code>$format</code> 引数を指定します。
            <code>$format</code> としてサポートされるのは、一文字のコード
            (H, m, s, y, M, d) および MMMM、EEEE だけです。
        </para>

        <example>
            <title>ユーザ定義の日付書式への正規化</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$date = Zend_Locale_Format::getDate('13200504T551422', 'ddyyyyMM ssmmHH');

print_r ($date);
?>]]></programlisting>
        </example>

        <para>
            書式には次の記号が使用できます。
            <table>
                <title>書式定義</title>
                <tgroup cols='2'>
                    <thead>
                        <row>
                            <entry>書式指定文字</entry>
                            <entry>説明</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>d あるいは dd</entry>
                            <entry>1 桁あるいは 2 桁の日</entry>
                        </row>
                        <row>
                            <entry>M あるいは MM</entry>
                            <entry>1 桁あるいは 2 桁の月</entry>
                        </row>
                        <row>
                            <entry>y あるいは yy</entry>
                            <entry>1 桁あるいは 2 桁の年</entry>
                        </row>
                        <row>
                            <entry>yyyy</entry>
                            <entry>4 桁の年</entry>
                        </row>
                        <row>
                            <entry>h</entry>
                            <entry>1 桁あるいは 2 桁の時</entry>
                        </row>
                        <row>
                            <entry>m</entry>
                            <entry>1 桁あるいは 2 桁の分</entry>
                        </row>
                        <row>
                            <entry>s</entry>
                            <entry>1 桁あるいは 2 桁の秒</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>
            適切な書式の例は、次のようになります。
            <table>
                <title>書式の例</title>
                <tgroup cols='3'>
                    <thead>
                        <row>
                            <entry>書式</entry>
                            <entry>入力</entry>
                            <entry>出力</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>dd.MM.yy</entry>
                            <entry>1.4.6</entry>
                            <entry>['day'] => 1,
                                   ['month'] => 4, 
                                   ['year'] => 6</entry>
                        </row>
                        <row>
                            <entry>dd.MM.yy</entry>
                            <entry>01.04.2006</entry>
                            <entry>['day'] => 1, ['month'] => 4, ['year'] => 2006</entry>
                        </row>
                        <row>
                            <entry>yyyyMMdd</entry>
                            <entry>1.4.6</entry>
                            <entry>['day'] => 6, ['month'] => 4, ['year'] => 1</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <note>
            <title>データベースの日付書式</title>
            <para>
                データベース (たとえば MySql や MsSql など) の日付値をパースするには、
                getDate() のかわりに Zend_Date の ISO_8601 書式を使用します。
            </para>
        </note>

        <para>
            <code>getDate()</code> は、
            入力に問題がある場合にそれを自動で検出し、訂正します。
            たとえば年の位置が違っている場合などがこれにあたります。
        </para>

        <example>
            <title>日付の正規化時の訂正処理</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$date = Zend_Locale_Format::getDate('41.10.20', 'ddMMyy');

// 41 は、日付ではなく年として返されます
print_r ($date);
?>]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.date.test">

        <title>日付かどうかの確認</title>

        <para>
            <code>isDate()</code> を使用して、
            指定した文字列が有効な日付を含むかどうかを調べます。
        </para>

        <example>
            <title>日付かどうかの確認</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$locale = new Zend_Locale('de_AT');
if (Zend_Locale_Format::isDate('13.Apr.2006', $locale) {
    print "日付です";
} else {
    print "日付ではありません";
} 
?>]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.time.normalizing">

        <title>時刻の正規化</title>

        <para>
            通常、入力に日付と時刻が両方含まれている場合は、
            時刻は日付とともに返されます。
            適切な書式はわからないが、ユーザの入力のロケールがわかるという場合に
            <code>getTime()</code> を使用します。
            これは、選択したロケールに対するデフォルトの時刻書式を使用するからです。
        </para>

        <example>
            <title>未知の時刻の正規化</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$locale = new Zend_Locale('de_AT');
if (Zend_Locale_Format::getTime('13:44:42', $locale) {
    print "時刻です";
} else {
    print "時刻ではありません";
} 
?>]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.time.test">

        <title>時刻かどうかの確認</title>

        <para>
            <code>isTime()</code> を使用して、
            指定した文字列が有効な時刻を含むかどうかを調べます。
        </para>

        <example>
            <title>時刻かどうかの確認</title>
<programlisting role="php"><![CDATA[<?php
require_once 'Zend/Locale.php';

$locale = new Zend_Locale('de_AT');
if (Zend_Locale_Format::isTime('13:44:42', $locale) {
    print "時刻です";
} else {
    print "時刻ではありません";
} 
?>]]></programlisting>
        </example>

    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
