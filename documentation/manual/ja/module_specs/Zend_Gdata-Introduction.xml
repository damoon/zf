<sect1 id="zend.gdata.introduction">
    <title>Gdata について</title>
    <para>
        Google Data API は、Google のオンラインサービスに対するプログラマ向けのインターフェイスです。
        クライアントアプリケーションは問い合わせ内容を HTTP
        経由で送信し、その応答を取得します。
        Zend_Gdata コンポーネントは PHP 5 用のインターフェイスで、Google Data
        に PHP からアクセスするためのものです。
    </para>

    <para>
        Google Data API についての詳細な情報は
        <ulink url="http://code.google.com/apis/gdata/">http://code.google.com/apis/gdata/</ulink>
        を参照ください。
    </para>

    <para>
        Zend_Gdata でアクセスできるサービスには次のようなものがあります。

        <itemizedlist>
            <listitem>
                <para>
                    <link linkend="zend.gdata.base">Google Base</link>
                    は、仕事やイベント、個人広告などのエントリを検索するためのツールです。
                    さまざまな人たちが項目を投稿し、それに対して一般的な属性を付加します。
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="zend.gdata.blogger">Google Blogger</link>
                    は人気のあるインターネットプロバイダで、
                    "ボタンひとつで簡単に" 記事を配信することができます。
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="zend.gdata.calendar">Google Calendar</link>
                    は、オンラインでスケジュール管理をしたり共同作業をしたりするためのツールです。
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="zend.gdata.codesearch">Google CodeSearch</link>
                    を使用すると、さまざまなプロジェクトが公開しているソースコードを検索できます。
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <note>
        <title>サポートしていないサービス</title>
        <para>
            Google Data API は Google Spreadsheets もサポートしています。
            しかし Zend_Gdata の今回のリリースでは、Spreadsheets
            用のヘルパークラスを提供していません。
        </para>

        <para>
            Zend_Gdata には、これら以外の Google のサービス
            (例えば検索、Gmail、翻訳、マップなど)
            に対するインターフェイスは含まれていません。
            Google Data API をサポートしているサービスにのみ対応しています。
        </para>
    </note>

    <sect2 id="zend.gdata.introduction.authentication">
        <title>Google Data クライアント認証</title>
        <para>
            ほとんどの Google Data サービスは、
            個人データへのアクセスやデータの保存、削除の前に
            Google サーバに対する認証を要求します。
            Google Data の認証用に提供される実装は
            <link linkend="zend.gdata.authsub">AuthSub</link> および
            <link linkend="zend.gdata.clientlogin">ClientLogin</link>
            の二種類があります。
            Zend_Gdata ではこれら両方の方式に対するインターフェイスを用意しています。
        </para>

        <para>
            Google Data サービスに対するその他大半の問い合わせは、
            認証を必要としません。
        </para>

    </sect2>

    <sect2 id="zend.gdata.introduction.dependencies">
        <title>依存性</title>
        <para>
            Zend_Gdata は
            <link linkend="zend.feed.introduction">Zend_Feed</link> および
            <link linkend="zend.http.client">Zend_Http_Client</link>
            を用いてリクエストを google.com に送信し、結果を取得します。
            ほとんどの Google Data リクエストに対する応答は
            Zend_Feed オブジェクトで返されます。その内容は
            Atom あるいは RSS 形式のフィードです。
        </para>

        <para>
            Zend_Gdata は、PHP アプリケーションの稼動しているホストが
            インターネットに直接つながっていることを想定しています。
            Zend_Gdata クライアントは Google Data サーバへの接続を行います。
        </para>

    </sect2>

    <sect2 id="zend.gdata.introduction.creation">
        <title>新しい Gdata クライアントの作成</title>

        <para>
            Zend_Gdata クラス、
            あるいはそのサブクラスのひとつのオブジェクトを作成します。
            各サブクラスではサービス固有のヘルパーメソッドを提供します。
        </para>

        <para>
            Zend_Gdata のコンストラクタに渡すオプションの引数は
            <link linkend="zend.http.client">Zend_Http_Client</link>
            のインスタンスです。このパラメータを渡さなかった場合は、
            Zend_Gdata はデフォルトの Zend_Http_Client オブジェクトを作成します。
            Zend_Http_Client オブジェクトを自分で指定すると、
            クライアントオブジェクトに対する設定オプションを指定することができます。
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Gdata.php';
require_once 'Zend/Http/Client.php';

$client = new Zend_Http_Client();
$client->setConfig( ...オプション... );

$gdata = new Zend_Gdata($client);
?>]]></programlisting>

        <para>
            認証済みの Zend_Http_Client オブジェクトを作成する方法については、
            認証のセクションも参照ください。
        </para>

    </sect2>

    <sect2 id="zend.gdata.introduction.parameters">
        <title>共通のクエリパラメータ</title>

        <para>
            パラメータを指定することで、Zend_Gdata
            での問い合わせをカスタマイズすることができます。
            中には特定の Google Data サービスにしか適用できないパラメータもありますが、
            これらのパラメータについては後の各サービスの節で説明します。
            複数の Google Data サービスで共通に使用できるパラメータについて、
            以下で説明します。
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <code>alt</code> パラメータはフィードの形式を指定します。
                    このパラメータには
                    <code>atom</code>、
                    <code>rss</code>、
                    <code>json</code>、
                    あるいは <code>json-in-script</code> のいずれかを指定します。
                    このパラメータを指定しなかった場合、デフォルトのフィードの形式は
                    <code>atom</code> となります。
                </para>
                <para>
                    このパラメータを設定するには <code>setAlt()</code>
                    を使用します。
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>maxResults</code> パラメータはフィード内のエントリ数を制限します。
                    整数値を指定します。返されるフィード内のエントリの数は、
                    この値を超えることはありません。
                </para>
                <para>
                    このパラメータを設定するには <code>setMaxResults()</code>
                    を使用します。
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>startIndex</code> パラメータは、
                    フィードで返される最初のエントリの番号を指定します。
                    それ以前の番号のエントリは読み飛ばされます。
                </para>
                <para>
                    このパラメータを設定するには <code>setStartIndex()</code>
                    を使用します。
                </para>
            </listitem>

            <listitem>
                <para>
                    <code>updatedMin</code> パラメータおよび <code>updatedMax</code>
                    パラメータは、エントリの日付の範囲を指定します。
                    <code>updatedMin</code> を指定すると、
                    それより前に更新されたエントリはフィードに含まれません。
                    同様に、<code>updatedMax</code>
                    で指定した日付より後で更新されたエントリもフィードに含まれません。
                </para>
                <para>
                    これらのパラメータには、タイムスタンプを表す数値を指定します。
                    あるいは 日付/時刻 を表す文字列を指定することもできます。
                </para>
                <para>
                    これらのパラメータを設定するには <code>setUpdatedMin()</code>
                    および <code>setUpdatedMax()</code> を使用します。
                </para>
            </listitem>

        </itemizedlist>

        <para>
            これらの <code>set</code> 関数に対応する
            <code>get</code> 関数もあります。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata();
$gdata->setMaxResults(10);
echo $gdata->getMaxResults();   // 10 を返します
?>]]></programlisting>

        <para>
            Zend_Gdata クラスでは、
            特別なゲッターメソッドおよびセッターメソッドも実装しています。
            つまり、パラメータの名前をクラスの仮想的なメンバとして扱うことができます。
            <code>isset()</code> や <code>unset()</code>
            を使用して、これらの仮想メンバを扱うこともできます。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata();
$gdata->maxResults = 10;
echo $gdata->maxResults;        // 10 を返します
echo isset($gdata->maxResults); // true を返します
unset($gdata->maxResults);      // パラメータを消去します
?>]]></programlisting>

        <para>
            すべてのパラメータを消去するには <code>resetParameters()</code>
            を使用します。複数のクエリで Zend_Gdata
            を使いまわす場合などに便利です。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata();
$gdata->maxResults = 10;
// ...フィードを取得します...

$gdata->resetParameters();      // すべてのパラメータを消去します
// ...別のフィードを取得します...
?>]]></programlisting>

    </sect2>

    <sect2 id="zend.gdata.introduction.getfeed">
        <title>フィードの取得</title>

        <para>
            <code>getFeed()</code> を使用して、指定した URI からフィードを取得します。
            この関数は Zend_Feed クラスのオブジェクトを返します。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata();
$gdata->setQuery('digital camera');
$gdata->setMaxResults(10);
$uri = 'http://www.google.com/base/feeds/snippets'
    . $gdata->getQueryString();
$feed = $gdata->getFeed($uri);
?>]]></programlisting>

        <para>
            この後の節で、各 Google Data
            サービス用のヘルパークラス固有の関数について説明します。これらの関数により、
            対応するサービスにあわせた適切なフィードを取得できるようになります。
        </para>

    </sect2>

    <sect2 id="zend.gdata.introduction.post">
        <title>Google サーバへのエントリの送信</title>

        <para>
            Zend_Gdata オブジェクトの関数 <code>post()</code>
            にアップロードしたいデータを指定し、
            新しいエントリを Google Data サービスに保存します。
        </para>

        <para>
            使用する Google Data サービスのエントリに対応する、
            正しい構造の XML を作成する必要があります。これには、
            たとえば DOM XML や SimpleXML などの PHP のライブラリを使用します。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata($client);     // $client は認証済みです

$xmlString = <<<XML
<entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'>
  <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'></category>
  <title type='text'>Tennis with Beth</title>
  <content type='text'>Meet for a quick lesson.</content>
  <author>
    <name>Jo March</name>
    <email>jo@gmail.com</email>
  </author>
  <gd:transparency
    value='http://schemas.google.com/g/2005#event.opaque'>
  </gd:transparency>
  <gd:eventStatus
    value='http://schemas.google.com/g/2005#event.confirmed'>
  </gd:eventStatus>
  <gd:where valueString='Rolling Lawn Courts'></gd:where>
  <gd:when startTime='2006-04-17T15:00:00.000Z'
    endTime='2006-04-17T17:00:00.000Z'></gd:when>
</entry>
XML;

$xml = new SimpleXMLElement($xmlString);

$myCalendar = 'http://www.google.com/calendar/feeds/default/private/full';
$gdata->post($xml->asXML(), $myCalendar);
?>]]></programlisting>

        <para>
            エントリを送信するには、認証済みの Zend_Http_Client
            を使用する必要があります。これは、
            Zend_Gdata_AuthSub クラスあるいは
            Zend_Gdata_ClientLogin クラスを使用して作成します。
        </para>

    </sect2>

    <sect2 id="zend.gdata.introduction.delete">
        <title>Google サーバからのデータの削除</title>

        <para>
            Zend_Gdata オブジェクトの関数 <code>delete()</code>
            に削除したいエントリを指定して、Google Data
            サービスからデータを削除します。
            フィードエントリの <code>&lt;id&gt;</code> の値を
            <code>delete()</code> メソッドに渡します。
        </para>

        <programlisting role="php"><![CDATA[<?php
$gdata = new Zend_Gdata();
// Google Data のフィード
$feedUri = ...;
$feed = $gdata->getFeed($feedUri);
foreach ($feed as $feedEntry) {
    // <id> 要素を抽出します
    $id = $feedEntry->id();
    $gdata->delete($id);
}
?>]]></programlisting>

        <para>
            エントリを削除するには、認証済みの Zend_Http_Client
            を使用する必要があります。これは、
            Zend_Gdata_AuthSub クラスあるいは
            Zend_Gdata_ClientLogin クラスを使用して作成します。
        </para>

    </sect2>
 
</sect1> 
