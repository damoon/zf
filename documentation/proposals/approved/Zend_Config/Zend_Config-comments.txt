Reviewed by Zend team on Thursday, 20 Apr 2006.
Decision: Accepted (Conditionally, Keep as Pending)

We view configuration management as one of the more important
aspects of the Zend Framework and have spent considerable time
discussing this topic and our strategy.

We have accepted this proposal on the conditions that these
changes be made to it:

- The Zend_Config class shall never modify configuration information
in its storage containers -- only PHP memory.  Storage containers (INI
files, database, etc) must be updated manually.  Perhaps this will
change in the future, KISS for now.

- The configuration information should only be allow to be modified in
memory if a flag is passed to the constructor.  This flag will not be
allowed to be changed after the object is instantiated.

- A top-level section name must be passed to the constructor and the config 
object will then be locked on this section for its lifetime.  For example, an 
INI file could be divided into the high-level sections "[Development]" and 
"[Production]".  One of these must be selected during the creation of the
object and later switching will not be permitted.

- For convenience, configuration information should be available by property 
overloading and not array access.

- The config object should implement Iterator for easily listing 
configuration information.

- The special inheritence keyword ("include" in the proposal) shall be
"extends" as in PHP.  Inheritence will be restricted to one section only,
i.e. nesting "extends" will be prohibited.  This will be detected and an
exception raised on violation.

- Additional config storage containers will be developed so that a variety
of configuration file formats can be read.  However, the Zend Framework
itself will have only one format.  This has yet to be decided and is not 
considered part of this proposal.

Until these changes have been made, the proposal will stay as Pending.
After they have been made, the proposal move to Accepted and development 
can begin in the incubator.
